opal_filter "Fixnum" do
  fails "Fixnum#& returns self bitwise AND other"
  fails "Fixnum#& returns self bitwise AND a Bignum"
  fails "Fixnum#& raises a TypeError when passed a Float"
  fails "Fixnum#bit_length returns the position of the leftmost bit of a positive number"
  fails "Fixnum#bit_length returns the position of the leftmost 0 bit of a negative number"
  fails "Fixnum#| returns self bitwise OR other"
  fails "Fixnum#| raises a TypeError when passed a Float"
  fails "Fixnum#^ returns self bitwise EXCLUSIVE OR other"
  fails "Fixnum#^ returns self bitwise EXCLUSIVE OR a Bignum"
  fails "Fixnum#^ raises a TypeError when passed a Float"
  fails "Fixnum#coerce when given a Fixnum returns an array containing two Fixnums"
  fails "Fixnum#coerce when given a String raises an ArgumentError when trying to coerce with a non-number String"
  fails "Fixnum#coerce when given a String returns  an array containing two Floats"
  fails "Fixnum#coerce tries to convert the given Object into a Float by using #to_f"
  fails "Fixnum#div with a Fixnum returns self divided by the given argument as an Integer"
  fails "Fixnum#div rounds towards -inf"
  fails "Fixnum#div coerces self and the given argument to Floats and returns self divided by other as Fixnum"
  fails "Fixnum#div raises a ZeroDivisionError when the given argument is 0 and a Float"
  fails "Fixnum#div raises a ZeroDivisionError when the given argument is 0"
  fails "Fixnum#div raises a TypeError when given a non-Integer"
  fails "Fixnum#/ returns self divided by the given argument"
  fails "Fixnum#/ supports dividing negative numbers"
  fails "Fixnum#/ raises a ZeroDivisionError if the given argument is zero and not a Float"
  fails "Fixnum#/ coerces fixnum and return self divided by other"
  fails "Fixnum#divmod raises a ZeroDivisionError when the given argument is 0"
  fails "Fixnum#divmod raises a ZeroDivisionError when the given argument is 0 and a Float"
  fails "Fixnum#** can raise -1 to a Bignum safely"
  fails "Fixnum#** returns a complex number when negative and raised to a fractional power"
  fails "Fixnum#% raises a ZeroDivisionError when the given argument is 0"
  fails "Fixnum#% raises a ZeroDivisionError when the given argument is 0 and a Float"
  fails "Fixnum#modulo raises a ZeroDivisionError when the given argument is 0"
  fails "Fixnum#modulo raises a ZeroDivisionError when the given argument is 0 and a Float"
  fails "Fixnum#* overflows to Bignum when the result does not fit in Fixnum"
end
