#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,569,-89,612,57,58,271,-526,600,61,271,59,60,62,23,24,66',
'67,793,271,576,204,205,22,28,27,91,90,92,93,546,642,17,204,205,343,342',
'770,7,41,6,9,95,94,569,85,50,87,86,88,73,89,96,97,853,81,82,83,74,38',
'39,-443,788,-94,641,590,611,-277,-443,602,601,204,205,-526,-277,569',
'266,638,754,-529,-83,36,569,-90,30,266,-90,52,525,790,54,-92,32,270',
'-526,-88,40,270,-95,-82,102,-90,-91,-89,18,101,270,-81,569,79,73,75',
'76,77,78,102,-443,568,74,80,101,-93,-277,63,64,65,56,51,711,53,-92,57',
'58,37,84,545,61,-94,59,60,62,257,258,66,67,-84,266,-528,-83,711,256',
'28,27,91,90,92,93,-450,102,218,568,307,538,101,-450,540,41,-82,-86,95',
'94,589,85,50,87,86,88,260,89,96,97,-528,81,82,83,-83,38,39,-529,102',
'102,568,-91,-83,101,101,102,-90,568,-90,-80,101,-90,-87,-82,-92,-82',
'-92,209,679,-92,213,-82,-84,52,784,-91,54,-91,255,-64,-91,102,40,568',
'876,-85,101,102,711,710,217,575,101,576,-84,79,73,75,76,77,78,204,205',
'266,74,80,771,-278,102,-84,710,-452,56,101,-278,53,-75,-84,-528,37,84',
'63,64,65,8,51,204,205,-271,57,58,299,301,300,61,-271,59,60,62,23,24',
'66,67,600,783,449,402,605,22,28,27,91,90,92,93,-92,-83,17,204,205,-88',
'600,-278,7,41,600,9,95,94,760,85,50,87,86,88,738,89,96,97,600,81,82',
'83,-271,38,39,738,735,102,226,710,102,586,101,-95,-277,101,226,735,802',
'642,-277,-277,781,602,601,36,-529,-277,30,-81,538,52,-529,540,54,307',
'32,-89,343,342,40,602,601,603,793,602,601,607,18,343,342,642,641,79',
'73,75,76,77,78,602,601,598,74,80,586,-440,585,390,642,-277,56,584,-440',
'53,736,-277,415,37,84,63,64,65,8,51,641,736,-451,57,58,399,400,401,61',
'-451,59,60,62,23,24,66,67,641,538,343,342,537,22,28,27,91,90,92,93,102',
'538,17,-278,540,101,585,618,7,41,-278,9,95,94,799,85,50,87,86,88,800',
'89,96,97,600,81,82,83,-451,38,39,552,226,230,235,236,237,232,234,242',
'243,238,239,201,219,220,922,555,240,241,202,36,-446,923,30,812,793,52',
'-278,-446,54,-452,32,223,486,229,40,225,224,221,222,233,231,227,18,228',
'812,793,622,79,73,75,76,77,78,602,601,613,74,80,-445,244,803,-227,804',
'891,56,-445,200,53,738,921,-80,37,84,63,64,65,8,51,-88,412,735,57,58',
'555,414,413,61,-82,59,60,62,23,24,66,67,-90,521,301,522,807,22,28,27',
'91,90,92,93,528,484,17,340,339,343,342,529,7,41,773,9,95,94,793,85,50',
'87,86,88,693,89,96,97,623,81,82,83,693,38,39,578,445,204,205,-451,816',
'817,579,446,-271,736,-451,517,891,-279,-278,-271,387,738,518,36,-279',
'-278,30,447,-279,52,819,493,54,735,32,-279,-324,-84,40,340,339,343,342',
'-324,493,-92,18,340,339,343,342,79,73,75,76,77,78,448,577,447,74,80',
'-451,340,339,343,342,-271,56,102,516,53,-279,-278,101,37,84,63,64,65',
'8,51,-448,-279,450,57,58,-258,451,-448,61,-324,59,60,62,23,24,66,67',
'-528,821,736,756,214,22,28,27,91,90,92,93,102,482,17,-449,484,101,203',
'618,7,41,-449,9,95,94,486,85,50,87,86,88,714,89,96,97,595,81,82,83,576',
'38,39,596,226,230,235,236,237,232,234,242,243,238,239,-447,219,220,263',
'-87,240,241,-447,36,-443,264,30,-95,102,52,829,-443,54,101,32,223,706',
'229,40,225,224,221,222,233,231,227,18,228,831,834,525,79,73,75,76,77',
'78,102,835,837,74,80,101,244,839,63,64,65,56,51,841,53,703,57,58,37',
'84,843,61,701,59,60,62,257,258,66,67,493,691,-259,307,-86,256,289,293',
'91,90,92,93,-94,557,218,335,333,332,-63,334,510,41,687,686,95,94,685',
'85,50,87,86,88,298,89,96,97,511,81,82,83,297,38,39,512,226,230,235,236',
'237,232,234,242,243,238,239,679,219,220,854,855,240,241,856,209,857',
'531,213,859,860,52,679,226,54,519,647,223,253,229,40,225,224,221,222',
'233,231,227,217,228,862,671,-257,79,73,75,76,77,78,866,669,-75,74,80',
'223,244,668,-227,225,224,56,871,275,53,873,666,245,37,84,63,64,65,8',
'51,307,845,846,57,58,847,96,97,61,658,59,60,62,23,24,66,67,104,105,106',
'107,108,22,28,27,91,90,92,93,657,557,17,335,333,332,879,334,7,41,881',
'9,95,94,882,85,50,87,86,88,307,89,96,97,307,81,82,83,266,38,39,226,226',
'230,235,236,237,232,234,242,243,238,239,226,219,220,226,226,240,241',
'895,36,-260,526,30,527,266,52,897,226,54,621,32,223,-257,229,40,225',
'224,221,222,233,231,227,18,228,199,-529,555,79,73,75,76,77,78,620,907',
'908,74,80,223,244,639,198,225,224,56,197,196,53,913,834,915,37,84,63',
'64,65,8,51,839,839,841,57,58,226,617,614,61,610,59,60,62,23,24,66,67',
'104,105,106,107,108,22,28,27,91,90,92,93,606,924,17,104,105,106,107',
'108,7,41,307,9,95,94,109,85,50,87,86,88,582,89,96,97,581,81,82,83,930',
'38,39,580,226,230,235,236,237,232,234,242,243,238,239,404,219,220,685',
'98,240,241,565,36,564,555,30,553,940,52,839,942,54,943,32,223,552,229',
'40,225,224,221,222,233,231,227,18,228,549,486,542,79,73,75,76,77,78',
'541,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234,242',
'243,238,239,,219,220,,,240,241,,209,,,213,,,52,,,54,,647,223,,229,40',
'225,224,221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,244',
',63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,226,230,235,236,237,232,234,242,243,238,239,,219,220,,,240',
'241,557,,335,333,332,902,334,,213,,,52,,223,54,229,,225,224,221,222',
'233,231,227,,228,557,,335,333,332,,334,79,73,75,76,77,78,560,,244,74',
'80,,,,809,,,56,,,53,,,,294,84,63,64,65,8,51,,560,,57,58,,,,61,563,59',
'60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94',
',85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232',
'234,242,243,238,239,,219,220,,,240,241,,36,,,30,,,52,,,54,,32,223,,229',
'40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80',
',244,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260',
'89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234,242,243,238,239',
',219,220,,,240,241,,209,,,213,,,52,,,54,,,223,253,229,40,225,224,221',
'222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,226,230,235,236,237,232,234,242,243,238,239,,219,220,,,240',
'241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221,222,233,231,227,217',
'228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37',
'84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,230,235,236',
'237,232,234,242,243,238,239,,219,220,,,240,241,,209,,,213,214,,52,,',
'54,,,223,,229,40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77',
'78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86',
'88,,89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234,242,243,238',
'239,,219,220,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221',
'222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,226,230,235,236,237,232,234,242,243,238,239,,219,220,,,240',
'241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221,222,233,231,227,217',
'228,,,,79,73,75,76,77,78,,,,74,80,,244,,,,,56,,,53,,,,37,84,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93',
',,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,',
'226,230,235,236,237,232,234,242,243,238,239,,219,220,,,240,241,,36,',
',30,,,52,,,54,,32,223,,229,40,225,224,221,222,233,231,227,18,228,,,',
'79,73,75,76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,28,27,91,90,92,93,,,218,,,,,,,41,,',
'95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38,39,,226,230,235,236',
'237,232,234,242,243,238,239,,219,220,,,240,241,,209,,,213,,,52,,,54',
',255,223,253,229,40,225,224,221,222,233,231,227,217,228,,,,79,73,75',
'76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62',
'257,258,66,67,,,,,,256,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85',
'50,87,86,88,260,89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234',
'242,243,238,239,,219,220,,,240,241,,209,,,213,,,52,,,54,,255,223,253',
'229,40,225,224,221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74',
'80,,244,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67',
',,,,,256,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260',
'89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234,242,243,238,239',
',219,220,,,240,241,,209,,,213,,,52,,,54,,255,223,253,229,40,225,224',
'221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,244,,,,,56',
',,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,91,90,92,93,226,557,17,335,333,332,,334,7,41,,9,95,94,,85',
'50,87,86,88,,89,96,97,,81,82,83,,38,39,223,226,,,225,224,221,222,,560',
',,,,,,,563,,,36,,,30,,,52,,,54,,32,223,,,40,225,224,221,222,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94',
',85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232',
'234,242,243,238,239,,-549,-549,,,240,241,,209,,,213,,,52,,,54,,,223',
',229,40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,226,-549,-549,-549,-549,232,234,,',
'-549,-549,,,,,,240,241,,36,,,30,,,52,,,54,,32,223,,229,40,225,224,221',
'222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83',
',38,39,,226,,,,,,,,,,,,,,,,240,241,,209,,,213,226,,52,,,54,,255,223',
',229,40,225,224,221,222,240,241,227,217,228,,,,79,73,75,76,77,78,,223',
',74,80,225,224,221,222,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9',
'95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,-549,-549,-549',
'-549,232,234,,,-549,-549,,,,,,240,241,,36,,,279,,,52,,,54,,32,223,,229',
'40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,',
'256,289,293,91,90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,326,,335,333,332,,334,,,,,,,,,,,,,,,,,287,,,284,,,52',
',,54,,283,,,,,337,326,,335,333,332,,334,340,339,343,342,79,73,75,76',
'77,78,,775,,74,80,,,,63,64,65,56,51,,53,,57,58,294,84,,61,337,59,60',
'62,257,258,66,67,340,339,343,342,,256,289,293,91,90,92,93,,,218,,,,',
',,290,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,326,,335,333,332,',
'334,,,,,,,,,,,,,,,,,287,,,213,,,52,,,54,,,,,,,337,321,,,,,,,340,339',
'343,342,79,73,75,76,77,78,,,,74,80,,,,296,,,56,,,53,,,,294,84,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90',
'92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,226,230,235,236,237,232,234,,,238,239,,,,,,240,241,,209,,,213,,',
'52,,,54,,,223,,229,40,225,224,221,222,233,231,227,217,228,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234,242',
'243,238,239,,-549,-549,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40',
'225,224,221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,226,-549,-549,-549,-549,232,234,,,-549,-549,,,,,,240',
'241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221,222,233,231,227,217',
'228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,218,,,,,,,41,',
',95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,-549,-549,-549',
'-549,232,234,,,-549,-549,,,,,,240,241,,209,,,213,,,52,,,54,,,223,,229',
'40,225,224,221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,',
'256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96',
'97,,81,82,83,,38,39,,226,-549,-549,-549,-549,232,234,,,-549,-549,,,',
',,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221,222,233,231',
'227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,',
'218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226',
',,,,,,,,,,,,,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221',
'222,,,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226',
',,,,,,,,,,,,,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221',
'222,,,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226',
'230,235,236,237,232,234,242,,238,239,,,,,,240,241,,209,,,213,,,52,,',
'54,,,223,,229,40,225,224,221,222,233,231,227,217,228,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95',
'94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,,,,,,,,,,,,,,,,240',
'241,,36,,,30,,,52,,,54,,32,223,,229,40,225,224,221,222,,,227,18,228',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,-549,-549,-549',
'-549,232,234,,,-549,-549,,,,,,240,241,,209,,,213,,,52,,,54,,,223,,229',
'40,225,224,221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81',
'82,83,,38,39,,226,,,,,,,,,,,,,,,,240,241,,209,,,213,,,52,,,54,,,223',
',229,40,225,224,221,222,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81',
'82,83,,38,39,,226,,,,,,,,,,,,,,,,240,241,,209,,,213,,,52,,,54,,255,223',
',229,40,225,224,221,222,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289',
'293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92',
'93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41',
',9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,102,,,,,101,56,,,53,,,,37,84,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91',
'90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83',
'326,,335,333,332,,334,,,,,,,,,,,,,,,,,355,,,30,,,52,,,54,,32,,,,,337',
',548,,,,,,340,339,343,342,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,294,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91',
'90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,360,,89,96,97,,81,82,83',
',,,,,,,,,,,,,,,,,,,,366,,,361,,,213,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,294,84,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41',
',9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,',
',,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,',
',,,,,,,,,,209,,,213,,,52,,,54,,255,,,,40,,,,,,,,217,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,421,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,,,,,,,,,,,,,,,,,,,,,,,287,,,284,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,294,84,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,290,,,95,94',
',85,50,87,86,88,,89,96,97,,81,82,83,,,,,,,,,,,,,,,,,,,,,,,,287,,,284',
',,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,294,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93',
',,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,260,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,,,253,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,6,9,95,94,,85,50,87,86,88,',
'89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,404,56,,,53,,,,37',
'84,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91',
'90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,',
'38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85',
'50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91',
'90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,',
'38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85',
'50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96',
'97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92',
'93,,,17,,,,,,7,41,6,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94',
',85,50,87,86,88,260,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209',
',,213,,,52,,,54,,647,,253,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83',
',38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,',
',,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88',
',89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,',
'421,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,421,,,,40,,,,,,,,217,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,255,,,,40,,,,,,,',
'217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,',
'17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94',
',85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,',
',213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81',
'82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,',
'217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,218,,,,,,,41,',
',95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,',
',,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96',
'97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,',
'218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,',
',,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,759,,,,40,,,,,,,,217,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62',
'257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85',
'50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96',
'97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,',
',41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,',
',,,,,,,209,,,213,,453,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66',
'67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86',
'88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93',
',,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,',
',,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,257,258,66,67,,,,,,256,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,',
'85,50,87,86,88,260,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209',
',,213,,,52,,,54,,255,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,',
'256,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,255',
',,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95',
'94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218',
',,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,',
',,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94',
',85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,',
'218,,,,,,,290,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,,,,,,,,,',
',,,,,,,,,,,,,697,,,213,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,294,84,,61,,59,60,62,257,258,66',
'67,,,,,,256,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88',
'260,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',255,,253,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,502,,,54,,255,,253,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,91,90,92,93,,,218,',
',,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38,39,,,,,,',
',,,,,,,,,,,,,,209,,,213,,506,52,,,54,,255,,253,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41',
',9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17',
',,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,279,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,260,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,647,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83',
',38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,',
'59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,',
',95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,',
',,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,88,',
'89,96,97,,81,82,83,,,,,,,,,,,,,,,,,,,,,,,,287,,,213,,,52,,,54,,,,,,',
',,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,514,,,56,,,53,,,,294,84,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,279,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94',
',85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,',
',213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,91,90,92,93,,,218,',
',,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38,39,,,,,,',
',,,,,,,,,,,,,,209,,,213,,,52,,,54,,255,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,290,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,,,,,,,,,,,,,,,,,,,,,,,287,,,284,,,52,',
',54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,294',
'84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,404,56,,,53,,,,37,84,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17',
',,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,',
',,,,,,,,,,,,209,,,213,,662,52,,,54,,,,253,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81',
'82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,253,,40,,,,',
',,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,',
',,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38,39,,,,,,,',
',,,,,,,,,,,,,209,,,213,,,52,,,54,,647,,253,,40,,,,,,,,217,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62',
'257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,290,,,95,94,',
'85,50,87,86,88,,89,96,97,,81,82,83,,,,,,,,,,,,,,,,,,,,,,,,287,,,284',
',,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,294,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83',
',38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,91,90,92,93,',
',218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38,39',
',,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,255,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94',
',85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,',
',213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,531,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,360,,89,96,97,,81,82',
'83,,,,,,,,,,,,,,,,,,,,,,,,361,,,213,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,294,84,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,748,54,335,333,332,738,334,40',
',,,,,,,18,,735,,-277,79,73,75,76,77,78,-277,-277,-277,74,80,,-277,-277',
',-277,,56,,337,53,,,,37,84,,340,339,343,342,,,,,-277,-277,,-277,-277',
'-277,-277,-277,,,,,748,,335,333,332,738,334,,,,,,,,,,,735,736,,-277',
'-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,,,-277',
'-277,-277,337,631,,,,-277,,,340,339,343,342,-277,,-277,,-277,-277,-277',
'-277,-277,-277,-277,,-277,,-277,,,,,,,,,,,,,-277,-277,,-85,,-277,-277',
'736,-277,,,-93,,-277,-277,-277,,,-277,-277,-277,748,-277,335,333,332',
'738,334,,,,,-277,-277,,,,,735,,,,-277,-277,,-277,-277,-277,-277,-277',
',,,,,,,,,,337,733,,,,,,,340,339,343,342,,,-277,-277,-277,-277,-277,-277',
'-277,-277,-277,-277,-277,-277,-277,-277,,,-277,-277,-277,,631,-277,',
',-277,,,-277,,-277,,-277,736,-277,,-277,-277,-277,-277,-277,-277,-277',
',-277,,-277,,,,,,,,,,,,,-277,-277,-277,-277,,-277,-440,,-277,,,-93,',
'-440,-440,-440,,,-440,-440,-440,748,-440,335,333,332,738,334,,,-440',
',-440,-440,-440,,,,735,,,,-440,-440,,-440,-440,-440,-440,-440,,,,,,',
',,,,337,733,,,,,,,340,339,343,342,,,-440,-440,-440,-440,-440,-440,-440',
'-440,-440,-440,-440,-440,-440,-440,,,-440,-440,-440,,-440,-440,,,-440',
',,-440,,-440,,-440,736,-440,,-440,-440,-440,-440,-440,-440,-440,,-440',
',-440,,,,,,,,,,,,,-440,-440,-440,-440,,-440,-532,-440,-440,,,-440,,-532',
'-532,-532,,,,-532,-532,,-532,,,,,,,,,-532,,,,,,,,,,,-532,-532,,-532',
'-532,-532,-532,-532,,,,,,,,,,,,,,,,,,,,,,,,,-532,-532,-532,-532,-532',
'-532,-532,-532,-532,-532,-532,-532,-532,-532,,,-532,-532,-532,,628,',
',,-532,,,,,,,-532,,-532,,-532,-532,-532,-532,-532,-532,-532,,-532,-532',
'-532,,,,,,,,,,,,,-532,-532,,-83,,-532,-532,,-532,,,-91,,-532,-532,-532',
',,-532,-532,-532,,-532,,,,,,,,,-532,-532,-532,,,,,,,,,-532,-532,,-532',
'-532,-532,-532,-532,,,,,,,,,,,,,,,,,,,,,,,,,-532,-532,-532,-532,-532',
'-532,-532,-532,-532,-532,-532,-532,-532,-532,,,-532,-532,-532,,772,-532',
',,-532,,,-532,,-532,,-532,,-532,,-532,-532,-532,-532,-532,-532,-532',
',-532,-532,-532,,,,,,,,,,,,,-532,-532,-532,-532,,-532,-443,,-532,,,-91',
',-443,-443,-443,,,-443,-443,-443,,-443,,,,,,,,-443,,-443,-443,-443,',
',,,,,,-443,-443,,-443,-443,-443,-443,-443,,,,,,,,,,,,,,,,,,,,,,,,,-443',
'-443,-443,-443,-443,-443,-443,-443,-443,-443,-443,-443,-443,-443,,,-443',
'-443,-443,,-443,-443,,,-443,,,-443,,-443,,-443,,-443,,-443,-443,-443',
'-443,-443,-443,-443,,-443,,-443,,,,,,,,,,,,,-443,-443,-443,-443,,-443',
'-373,-443,-443,,,-443,,-373,-373,-373,,,-373,-373,-373,,-373,,,,,,,',
',-373,-373,-373,,,,,,,,,-373,-373,,-373,-373,-373,-373,-373,,,,,,,,',
',,,,,,,,,,,,,,,,-373,-373,-373,-373,-373,-373,-373,-373,-373,-373,-373',
'-373,-373,-373,,,-373,-373,-373,,,-373,,266,-373,,,-373,,-373,,-373',
',-373,,-373,-373,-373,-373,-373,-373,-373,,-373,-373,-373,,,,,,,,,,',
',,-373,-373,-373,-373,-533,-373,,,-373,,,-533,-533,-533,,,-533,-533',
'-533,,-533,,,,,,,,,-533,-533,-533,-533,,,,,,,,-533,-533,,-533,-533,-533',
'-533,-533,,,,,,,,,,,,,,,,,,,,,,,,,-533,-533,-533,-533,-533,-533,-533',
'-533,-533,-533,-533,-533,-533,-533,,,-533,-533,-533,,,-533,,,-533,,',
'-533,,-533,,-533,,-533,,-533,-533,-533,-533,-533,-533,-533,,-533,-533',
'-533,,,,,,,,,,,,,-533,-533,-533,-533,-548,-533,,-533,-533,,,-548,-548',
'-548,,,-548,-548,-548,,-548,,,,,,,,,-548,-548,-548,,,,,,,,,-548,-548',
',-548,-548,-548,-548,-548,,,,,,,,,,,,,,,,,,,,,,,,,-548,-548,-548,-548',
'-548,-548,-548,-548,-548,-548,-548,-548,-548,-548,,,-548,-548,-548,',
',-548,,266,-548,,,-548,,-548,,-548,,-548,,-548,-548,-548,-548,-548,-548',
'-548,,-548,-548,-548,,,,,,,,,,,,,-548,-548,-548,-548,-534,-548,,,-548',
',,-534,-534,-534,,,-534,-534,-534,,-534,,,,,,,,,-534,-534,-534,-534',
',,,,,,,-534,-534,,-534,-534,-534,-534,-534,,,,,,,,,,,,,,,,,,,,,,,,,-534',
'-534,-534,-534,-534,-534,-534,-534,-534,-534,-534,-534,-534,-534,,,-534',
'-534,-534,,,-534,,,-534,,,-534,,-534,,-534,,-534,,-534,-534,-534,-534',
'-534,-534,-534,,-534,-534,-534,,,,,,,,,,,,,-534,-534,-534,-534,-285',
'-534,,-534,-534,,,-285,-285,-285,,,-285,-285,-285,,-285,,,,,,,,,,-285',
'-285,,,,,,,,,-285,-285,,-285,-285,-285,-285,-285,,,,,,,,,,,,,,,,,,,',
',,,,,-285,-285,-285,-285,-285,-285,-285,-285,-285,-285,-285,-285,-285',
'-285,,,-285,-285,-285,,,-285,,275,-285,,,-285,,-285,,-285,,-285,,-285',
'-285,-285,-285,-285,-285,-285,,-285,,-285,,,,,,,,,,,,,-285,-285,-285',
'-285,-272,-285,,,-285,,,-272,-272,-272,,,-272,-272,-272,,-272,,,,,,',
',,,-272,-272,-272,,,,,,,,-272,-272,,-272,-272,-272,-272,-272,,,,,,,',
',,,,,,,,,,,,,,,,,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272',
'-272,-272,-272,,,-272,-272,-272,,,-272,,,-272,,,-272,,-272,,-272,,-272',
',-272,-272,-272,-272,-272,-272,-272,,-272,,-272,,,,,,,,,,,,,-272,-272',
'-272,-272,-548,-272,,-272,-272,,,-548,-548,-548,,,-548,-548,-548,,-548',
',,,,,,,,,-548,,,,,,,,,,-548,-548,,-548,-548,-548,-548,-548,,,,,,,,,',
',,,,-548,,,,,,,-548,-548,-548,,,-548,-548,-548,,-548,,,,,,-548,,,,-548',
',,-548,,,,,266,-548,-548,-548,,-548,-548,-548,-548,-548,,,,,,,,,,,,',
'-548,,,,,,,,,,,,,-548,,-548,,,-548,,,,,-548,,,,,,,-548,,,,,266,-548',
',,,,,,,,,,,,,,,,,,,,-548,,,,,,,,,,,,,-548,,-548,,,-548,157,168,158,181',
'154,174,164,163,189,192,179,162,161,156,182,190,191,166,155,169,173',
'175,167,160,,,,176,183,178,177,170,180,165,153,172,171,184,185,186,187',
'188,152,159,150,151,148,149,,112,114,,,113,,,,,,,,,,143,144,,140,122',
'123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136',
',121,142,139,138,134,135,129,127,119,141,120,,,147,193,,,,,,,,,,80,157',
'168,158,181,154,174,164,163,189,192,179,162,161,156,182,190,191,166',
'155,169,173,175,167,160,,,,176,183,178,177,170,180,165,153,172,171,184',
'185,186,187,188,152,159,150,151,148,149,,112,114,111,,113,,,,,,,,,,143',
'144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,',
',,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,,,147,193',
',,,,,,,,,80,157,168,158,181,154,174,164,163,189,192,179,162,161,156',
'182,190,191,166,155,169,173,175,167,160,,,,176,183,178,177,170,180,165',
'153,172,171,184,185,186,187,188,152,159,150,151,148,149,,112,114,,,113',
',,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132',
'133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
',,147,193,,,,,,,,,,80,157,168,158,181,154,174,164,163,189,192,179,162',
'161,156,182,190,191,166,155,169,173,175,167,160,,,,176,183,178,177,170',
'180,165,153,172,171,184,185,186,187,188,152,159,150,151,148,149,,112',
'114,,,113,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,',
',145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127',
'119,141,120,,,147,193,,,,,,,,,,80,157,168,158,181,154,174,164,163,189',
'192,179,162,161,156,182,190,191,166,155,169,173,175,167,160,,,,176,183',
'178,177,170,180,165,153,172,171,184,185,186,187,188,152,159,150,151',
'148,149,,112,114,,,113,,,,,,,,,,143,144,,140,122,123,124,131,128,130',
',,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134',
'135,129,127,119,141,120,,,147,157,168,158,181,154,174,164,163,189,192',
'179,162,161,156,182,190,191,166,155,169,173,175,167,160,,,,176,183,178',
'177,170,180,165,153,172,171,184,185,186,187,188,152,159,150,151,148',
'149,,112,114,397,396,113,,398,,,,,,,,143,144,,140,122,123,124,131,128',
'130,,,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138',
'134,135,129,127,119,141,120,,,147,157,168,158,181,154,174,164,163,189',
'192,179,162,161,156,182,190,191,166,155,169,173,175,167,160,,,,176,183',
'178,177,170,180,165,153,172,171,184,185,186,187,188,152,159,150,151',
'148,149,,112,114,397,396,113,,398,,,,,,,,143,144,,140,122,123,124,131',
'128,130,,,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139',
'138,134,135,129,127,119,141,120,,,147,157,168,158,181,154,174,164,163',
'189,192,179,162,161,156,182,190,191,166,155,169,173,175,167,160,,,,176',
'183,178,375,374,376,373,153,172,171,184,185,186,187,188,152,159,150',
'151,371,372,,369,114,87,86,370,,89,,,,,,,,143,144,,140,122,123,124,131',
'128,130,,,125,126,,,,145,146,132,133,,,,,,380,,,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,634,439,147,,635,,,,,,,,,,143,144',
',140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,,,,,',
',,137,136,,121,142,139,138,134,135,129,127,119,141,120,490,433,147,',
'491,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146',
'132,133,,,,,,266,,,,,,,137,136,,121,142,139,138,134,135,129,127,119',
'141,120,725,439,147,,723,,,,,,,,,,143,144,,140,122,123,124,131,128,130',
',,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134',
'135,129,127,119,141,120,632,433,147,,633,,,,,,,,,,143,144,,140,122,123',
'124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,266,,,,,,,137,136',
',121,142,139,138,134,135,129,127,119,141,120,720,439,147,,721,,,,,,',
',,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133',
',,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,718',
'433,147,,719,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126',
',,,145,146,132,133,,,,,,266,,,,,,,137,136,,121,142,139,138,134,135,129',
'127,119,141,120,935,433,147,,936,,,,,,,,,,143,144,,140,122,123,124,131',
'128,130,,,125,126,,,,145,146,132,133,,,,,,266,,,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,937,439,147,,938,,,,,,,,,,143,144',
',140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,,,,,',
',,137,136,,121,142,139,138,134,135,129,127,119,141,120,490,433,147,',
'491,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146',
'132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141',
'120,490,433,147,,491,,,,,,,,,,143,144,,140,122,123,124,131,128,130,',
',125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134',
'135,129,127,119,141,120,634,439,147,,635,,,,,,,,,,143,144,,140,122,123',
'124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121',
'142,139,138,134,135,129,127,119,141,120,435,439,147,,437,,,,,,,,,,143',
'144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,',
',,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,676,439,147',
',677,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145',
'146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119',
'141,120,673,433,147,,674,,,,,,,,,,143,144,,140,122,123,124,131,128,130',
',,125,126,,,,145,146,132,133,,,,,,266,,,,,,,137,136,,121,142,139,138',
'134,135,129,127,119,141,120,429,433,147,,430,,,,,,,,,,143,144,,140,122',
'123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,266,,,,,,,137',
'136,,121,142,139,138,134,135,129,127,119,141,120,725,439,147,,868,,',
',,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132',
'133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
'632,433,147,,633,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125',
'126,,,,145,146,132,133,,,,,,266,,,,,,,137,136,,121,142,139,138,134,135',
'129,127,119,141,120,,,147' ]
        racc_action_table = arr = ::Array.new(23987, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,347,819,391,0,0,55,360,608,0,26,0,0,0,0,0,0,0,910,291,910',
'452,452,0,0,0,0,0,0,0,320,480,0,683,683,555,555,632,0,0,0,0,0,0,346',
'0,0,0,0,0,71,0,0,0,773,0,0,0,71,0,0,360,672,580,480,365,391,938,360',
'608,608,597,597,360,938,865,26,452,608,938,676,0,872,935,0,291,632,0',
'448,683,0,936,0,55,360,353,0,26,356,673,3,718,937,773,0,3,291,819,818',
'0,0,0,0,0,0,347,360,347,0,0,347,721,938,921,921,921,0,921,820,0,719',
'921,921,0,0,320,921,448,921,921,921,921,921,921,921,674,675,676,676',
'571,921,921,921,921,921,921,921,371,346,921,346,597,688,346,371,688',
'921,673,580,921,921,365,921,921,921,921,921,921,921,921,921,937,921',
'921,921,676,921,921,721,865,365,865,720,676,865,365,872,935,872,935',
'353,872,935,356,673,936,718,936,921,670,936,921,673,674,921,663,937',
'921,937,921,668,937,818,921,818,818,721,818,820,572,820,921,351,820',
'351,719,921,921,921,921,921,921,730,730,678,921,921,633,924,571,674',
'571,208,921,571,924,921,668,674,720,921,921,919,919,919,919,919,309',
'309,903,919,919,37,37,37,919,903,919,919,919,919,919,919,919,386,660',
'210,98,386,919,919,919,919,919,919,919,633,720,919,345,345,208,384,924',
'919,919,388,919,919,919,621,919,919,919,919,919,839,919,919,919,382',
'919,919,919,903,919,919,831,839,572,681,572,730,696,572,210,723,730',
'682,831,696,504,677,723,656,386,386,919,723,677,919,621,316,919,677',
'316,919,309,919,621,839,839,919,384,384,384,684,388,388,388,919,831',
'831,503,504,919,919,919,919,919,919,382,382,382,919,919,363,369,696',
'78,493,723,919,363,369,919,839,677,194,919,919,911,911,911,911,911,503',
'831,900,911,911,84,84,84,911,900,911,911,911,911,911,911,911,493,312',
'834,834,312,911,911,911,911,911,911,911,734,313,911,519,313,734,363',
'419,911,911,519,911,911,911,689,911,911,911,911,911,690,911,911,911',
'393,911,911,911,900,911,911,693,419,419,419,419,419,419,419,419,419',
'419,419,13,419,419,901,695,419,419,13,911,375,901,911,705,705,911,519',
'375,911,35,911,419,646,419,911,419,419,419,419,419,419,419,911,419,925',
'925,429,911,911,911,911,911,911,393,393,393,911,911,374,419,697,419',
'698,837,911,374,13,911,837,901,35,911,911,906,906,906,906,906,35,111',
'837,906,906,699,111,111,906,429,906,906,906,906,906,906,906,429,294',
'294,294,702,906,906,906,906,906,906,906,302,644,906,837,837,837,837',
'302,906,906,636,906,906,906,707,906,906,906,906,906,549,906,906,906',
'430,906,906,906,804,906,906,354,207,15,15,285,713,715,354,207,288,837',
'285,286,915,788,582,288,77,915,286,906,788,582,906,302,943,906,717,629',
'906,915,906,943,42,430,906,549,549,549,549,42,624,430,906,804,804,804',
'804,906,906,906,906,906,906,209,354,207,906,906,285,915,915,915,915',
'288,906,590,286,906,788,582,590,906,906,899,899,899,899,899,373,943',
'211,899,899,619,212,373,899,42,899,899,899,899,899,899,899,725,726,915',
'612,218,899,899,899,899,899,899,899,350,250,899,372,251,350,14,637,899',
'899,372,899,899,899,254,899,899,899,899,899,574,899,899,899,378,899',
'899,899,573,899,899,378,637,637,637,637,637,637,637,637,637,637,637',
'376,637,637,25,14,637,637,376,899,370,25,899,14,276,899,737,370,899',
'276,899,637,567,637,899,637,637,637,637,637,637,637,899,637,741,742',
'298,899,899,899,899,899,899,728,744,745,899,899,728,637,746,897,897',
'897,899,897,748,899,562,897,897,899,899,751,897,558,897,897,897,897',
'897,897,897,265,547,758,41,298,897,897,897,897,897,897,897,298,563,897',
'563,563,563,278,563,280,897,534,533,897,897,532,897,897,897,897,897',
'36,897,897,897,281,897,897,897,34,897,897,282,659,659,659,659,659,659',
'659,659,659,659,659,523,659,659,776,777,659,659,780,897,782,520,897',
'785,786,897,787,457,897,287,897,659,897,659,897,659,659,659,659,659',
'659,659,897,659,791,515,794,897,897,897,897,897,897,795,513,510,897',
'897,457,659,509,659,457,457,897,810,289,897,813,505,20,897,897,880,880',
'880,880,880,290,752,752,880,880,752,752,752,880,499,880,880,880,880',
'880,880,880,667,667,667,667,667,880,880,880,880,880,880,880,498,809',
'880,809,809,809,822,809,880,880,825,880,880,880,826,880,880,880,880',
'880,827,880,880,880,495,880,880,880,293,880,880,461,479,479,479,479',
'479,479,479,479,479,479,479,460,479,479,459,458,479,479,849,880,850',
'299,880,300,436,880,858,456,880,428,880,479,424,479,880,479,479,479',
'479,479,479,479,880,479,12,868,869,880,880,880,880,880,880,422,874,875',
'880,880,456,479,479,11,456,456,880,10,9,880,883,885,888,880,880,877',
'877,877,877,877,889,890,891,877,877,304,416,410,877,390,877,877,877',
'877,877,877,877,277,277,277,277,277,877,877,877,877,877,877,877,387',
'902,877,5,5,5,5,5,877,877,311,877,877,877,6,877,877,877,877,877,361',
'877,877,877,357,877,877,877,912,877,877,355,769,769,769,769,769,769',
'769,769,769,769,769,352,769,769,920,1,769,769,344,877,341,329,877,328',
'929,877,931,932,877,934,877,769,326,769,877,769,769,769,769,769,769',
'769,877,769,325,317,315,877,877,877,877,877,877,314,,,877,877,,769,',
'876,876,876,877,876,,877,,876,876,877,877,,876,,876,876,876,876,876',
'876,876,,,,,,876,876,876,876,876,876,876,,,876,,,,,,,876,,,876,876,',
'876,876,876,876,876,,876,876,876,,876,876,876,,876,876,,852,852,852',
'852,852,852,852,852,852,852,852,,852,852,,,852,852,,876,,,876,,,876',
',,876,,876,852,,852,876,852,852,852,852,852,852,852,876,852,,,,876,876',
'876,876,876,876,,,,876,876,,852,,866,866,866,876,866,,876,,866,866,876',
'876,,866,,866,866,866,866,866,866,866,,,,,,866,866,866,866,866,866,866',
',,866,,,,,,,866,,,866,866,,866,866,866,866,866,,866,866,866,,866,866',
'866,442,442,442,442,442,442,442,442,442,442,442,,442,442,,,442,442,703',
',703,703,703,866,703,,866,,,866,,442,866,442,,442,442,442,442,442,442',
'442,,442,337,,337,337,337,,337,866,866,866,866,866,866,703,,442,866',
'866,,,,703,,,866,,,866,,,,866,866,862,862,862,862,862,,337,,862,862',
',,,862,337,862,862,862,862,862,862,862,,,,,,862,862,862,862,862,862',
'862,,,862,,,,,,862,862,,862,862,862,,862,862,862,862,862,,862,862,862',
',862,862,862,,862,862,,248,248,248,248,248,248,248,248,248,248,248,',
'248,248,,,248,248,,862,,,862,,,862,,,862,,862,248,,248,862,248,248,248',
'248,248,248,248,862,248,,,,862,862,862,862,862,862,,,,862,862,,248,',
'857,857,857,862,857,,862,,857,857,862,862,,857,,857,857,857,857,857',
'857,857,,,,,,857,857,857,857,857,857,857,,,857,,,,,,,857,,,857,857,',
'857,857,857,857,857,857,857,857,857,,857,857,857,,857,857,,530,530,530',
'530,530,530,530,530,530,530,530,,530,530,,,530,530,,857,,,857,,,857',
',,857,,,530,857,530,857,530,530,530,530,530,530,530,857,530,,,,857,857',
'857,857,857,857,,,,857,857,,530,,853,853,853,857,853,,857,,853,853,857',
'857,,853,,853,853,853,853,853,853,853,,,,,,853,853,853,853,853,853,853',
',,853,,,,,,,853,,,853,853,,853,853,853,853,853,,853,853,853,,853,853',
'853,,853,853,,427,427,427,427,427,427,427,427,427,427,427,,427,427,',
',427,427,,853,,,853,,,853,,,853,,,427,,427,853,427,427,427,427,427,427',
'427,853,427,,,,853,853,853,853,853,853,,,,853,853,,427,,17,17,17,853',
'17,,853,,17,17,853,853,,17,,17,17,17,17,17,17,17,,,,,,17,17,17,17,17',
'17,17,,,17,,,,,,,17,,,17,17,,17,17,17,17,17,,17,17,17,,17,17,17,,17',
'17,,767,767,767,767,767,767,767,767,767,767,767,,767,767,,,767,767,',
'17,,,17,17,,17,,,17,,,767,,767,17,767,767,767,767,767,767,767,17,767',
',,,17,17,17,17,17,17,,,,17,17,,767,,18,18,18,17,18,,17,,18,18,17,17',
',18,,18,18,18,18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,',
'18,18,,18,18,18,18,18,,18,18,18,,18,18,18,,18,18,,764,764,764,764,764',
'764,764,764,764,764,764,,764,764,,,764,764,,18,,,18,,,18,,,18,,,764',
',764,18,764,764,764,764,764,764,764,18,764,,,,18,18,18,18,18,18,,,,18',
'18,,764,,841,841,841,18,841,,18,,841,841,18,18,,841,,841,841,841,841',
'841,841,841,,,,,,841,841,841,841,841,841,841,,,841,,,,,,,841,,,841,841',
',841,841,841,841,841,,841,841,841,,841,841,841,,841,841,,680,680,680',
'680,680,680,680,680,680,680,680,,680,680,,,680,680,,841,,,841,,,841',
',,841,,,680,,680,841,680,680,680,680,680,680,680,841,680,,,,841,841',
'841,841,841,841,,,,841,841,,680,,,,,841,,,841,,,,841,841,815,815,815',
'815,815,,,,815,815,,,,815,,815,815,815,815,815,815,815,,,,,,815,815',
'815,815,815,815,815,,,815,,,,,,815,815,,815,815,815,,815,815,815,815',
'815,,815,815,815,,815,815,815,,815,815,,19,19,19,19,19,19,19,19,19,19',
'19,,19,19,,,19,19,,815,,,815,,,815,,,815,,815,19,,19,815,19,19,19,19',
'19,19,19,815,19,,,,815,815,815,815,815,815,,,,815,815,,19,,22,22,22',
'815,22,,815,,22,22,815,815,,22,,22,22,22,22,22,22,22,,,,,,22,22,22,22',
'22,22,22,,,22,,,,,,,22,,,22,22,,22,22,22,22,22,22,22,22,22,,22,22,22',
',22,22,,757,757,757,757,757,757,757,757,757,757,757,,757,757,,,757,757',
',22,,,22,,,22,,,22,,22,757,22,757,22,757,757,757,757,757,757,757,22',
'757,,,,22,22,22,22,22,22,,,,22,22,,757,,23,23,23,22,23,,22,,23,23,22',
'22,,23,,23,23,23,23,23,23,23,,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23',
',,23,23,,23,23,23,23,23,23,23,23,23,,23,23,23,,23,23,,762,762,762,762',
'762,762,762,762,762,762,762,,762,762,,,762,762,,23,,,23,,,23,,,23,,23',
'762,23,762,23,762,762,762,762,762,762,762,23,762,,,,23,23,23,23,23,23',
',,,23,23,,762,,24,24,24,23,24,,23,,24,24,23,23,,24,,24,24,24,24,24,24',
'24,,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,,24,24,24,24,24,24',
'24,24,24,,24,24,24,,24,24,,774,774,774,774,774,774,774,774,774,774,774',
',774,774,,,774,774,,24,,,24,,,24,,,24,,24,774,24,774,24,774,774,774',
'774,774,774,774,24,774,,,,24,24,24,24,24,24,,,,24,24,,774,,,,,24,,,24',
',,,24,24,814,814,814,814,814,,,,814,814,,,,814,,814,814,814,814,814',
'814,814,,,,,,814,814,814,814,814,814,814,476,560,814,560,560,560,,560',
'814,814,,814,814,814,,814,814,814,814,814,,814,814,814,,814,814,814',
',814,814,476,475,,,476,476,476,476,,560,,,,,,,,560,,,814,,,814,,,814',
',,814,,814,475,,,814,475,475,475,475,,,,814,,,,,814,814,814,814,814',
'814,,,,814,814,,,,812,812,812,814,812,,814,,812,812,814,814,,812,,812',
'812,812,812,812,812,812,,,,,,812,812,812,812,812,812,812,,,812,,,,,',
',812,,,812,812,,812,812,812,812,812,,812,812,812,,812,812,812,,812,812',
',455,455,455,455,455,455,455,455,455,455,455,,455,455,,,455,455,,812',
',,812,,,812,,,812,,,455,,455,812,455,455,455,455,455,455,455,812,455',
',,,812,812,812,812,812,812,,,,812,812,,,,,,,812,,,812,,,,812,812,793',
'793,793,793,793,,,,793,793,,,,793,,793,793,793,793,793,793,793,,,,,',
'793,793,793,793,793,793,793,,,793,,,,,,793,793,,793,793,793,,793,793',
'793,793,793,,793,793,793,,793,793,793,,793,793,,465,465,465,465,465',
'465,465,,,465,465,,,,,,465,465,,793,,,793,,,793,,,793,,793,465,,465',
'793,465,465,465,465,465,465,465,793,465,,,,793,793,793,793,793,793,',
',,793,793,,,,783,783,783,793,783,,793,,783,783,793,793,,783,,783,783',
'783,783,783,783,783,,,,,,783,783,783,783,783,783,783,,,783,,,,,,,783',
',,783,783,,783,783,783,783,783,,783,783,783,,783,783,783,,783,783,,466',
',,,,,,,,,,,,,,,466,466,,783,,,783,464,,783,,,783,,783,466,,466,783,466',
'466,466,466,464,464,466,783,466,,,,783,783,783,783,783,783,,464,,783',
'783,464,464,464,464,,,783,,,783,,,,783,783,30,30,30,30,30,,,,30,30,',
',,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30',
',30,30,30,,30,30,30,30,30,,30,30,30,,30,30,30,,30,30,,474,474,474,474',
'474,474,474,,,474,474,,,,,,474,474,,30,,,30,,,30,,,30,,30,474,,474,30',
'474,474,474,474,474,474,474,30,474,,,,30,30,30,30,30,30,,,,30,30,,,',
'31,31,31,30,31,,30,,31,31,30,30,,31,,31,31,31,31,31,31,31,,,,,,31,31',
'31,31,31,31,31,,,31,,,,,,,31,,,31,31,,31,31,31,31,31,,31,31,31,,31,31',
'31,641,,641,641,641,,641,,,,,,,,,,,,,,,,,31,,,31,,,31,,,31,,31,,,,,641',
'553,,553,553,553,,553,641,641,641,641,31,31,31,31,31,31,,641,,31,31',
',,,32,32,32,31,32,,31,,32,32,31,31,,32,553,32,32,32,32,32,32,32,553',
'553,553,553,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,,32,32,32,32',
'32,,32,32,32,,32,32,32,56,,56,56,56,,56,,,,,,,,,,,,,,,,,32,,,32,,,32',
',,32,,,,,,,56,56,,,,,,,56,56,56,56,32,32,32,32,32,32,,,,32,32,,,,32',
',,32,,,32,,,,32,32,772,772,772,,772,,,,772,772,,,,772,,772,772,772,772',
'772,772,772,,,,,,772,772,772,772,772,772,772,,,772,,,,,,,772,,,772,772',
',772,772,772,772,772,,772,772,772,,772,772,772,,772,772,,477,477,477',
'477,477,477,477,,,477,477,,,,,,477,477,,772,,,772,,,772,,,772,,,477',
',477,772,477,477,477,477,477,477,477,772,477,,,,772,772,772,772,772',
'772,,,,772,772,,,,771,771,771,772,771,,772,,771,771,772,772,,771,,771',
'771,771,771,771,771,771,,,,,,771,771,771,771,771,771,771,,,771,,,,,',
',771,,,771,771,,771,771,771,771,771,,771,771,771,,771,771,771,,771,771',
',454,454,454,454,454,454,454,454,454,454,454,,454,454,,,454,454,,771',
',,771,,,771,,,771,,,454,,454,771,454,454,454,454,454,454,454,771,454',
',,,771,771,771,771,771,771,,,,771,771,,,,770,770,770,771,770,,771,,770',
'770,771,771,,770,,770,770,770,770,770,770,770,,,,,,770,770,770,770,770',
'770,770,,,770,,,,,,,770,,,770,770,,770,770,770,770,770,,770,770,770',
',770,770,770,,770,770,,473,473,473,473,473,473,473,,,473,473,,,,,,473',
'473,,770,,,770,,,770,,,770,,,473,,473,770,473,473,473,473,473,473,473',
'770,473,,,,770,770,770,770,770,770,,,,770,770,,,,760,760,760,770,760',
',770,,760,760,770,770,,760,,760,760,760,760,760,760,760,,,,,,760,760',
'760,760,760,760,760,,,760,,,,,,,760,,,760,760,,760,760,760,760,760,',
'760,760,760,,760,760,760,,760,760,,472,472,472,472,472,472,472,,,472',
'472,,,,,,472,472,,760,,,760,,,760,,,760,,,472,,472,760,472,472,472,472',
'472,472,472,760,472,,,,760,760,760,760,760,760,,,,760,760,,,,38,38,38',
'760,38,,760,,38,38,760,760,,38,,38,38,38,38,38,38,38,,,,,,38,38,38,38',
'38,38,38,,,38,,,,,,,38,,,38,38,,38,38,38,38,38,,38,38,38,,38,38,38,',
'38,38,,471,471,471,471,471,471,471,,,471,471,,,,,,471,471,,38,,,38,',
',38,,,38,,,471,,471,38,471,471,471,471,471,471,471,38,471,,,,38,38,38',
'38,38,38,,,,38,38,,,,39,39,39,38,39,,38,,39,39,38,38,,39,,39,39,39,39',
'39,39,39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,,39,39,39,39',
'39,,39,39,39,,39,39,39,,39,39,,467,,,,,,,,,,,,,,,,467,467,,39,,,39,',
',39,,,39,,,467,,467,39,467,467,467,467,,,467,39,467,,,,39,39,39,39,39',
'39,,,,39,39,,,,40,40,40,39,40,,39,,40,40,39,39,,40,,40,40,40,40,40,40',
'40,,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,',
'40,40,40,,40,40,40,,40,40,,469,,,,,,,,,,,,,,,,469,469,,40,,,40,,,40',
',,40,,,469,,469,40,469,469,469,469,,,469,40,469,,,,40,40,40,40,40,40',
',,,40,40,,,,759,759,759,40,759,,40,,759,759,40,40,,759,,759,759,759',
'759,759,759,759,,,,,,759,759,759,759,759,759,759,,,759,,,,,,,759,,,759',
'759,,759,759,759,759,759,,759,759,759,,759,759,759,,759,759,,478,478',
'478,478,478,478,478,478,,478,478,,,,,,478,478,,759,,,759,,,759,,,759',
',,478,,478,759,478,478,478,478,478,478,478,759,478,,,,759,759,759,759',
'759,759,,,,759,759,,,,,,,759,,,759,,,,759,759,753,753,753,753,753,,',
',753,753,,,,753,,753,753,753,753,753,753,753,,,,,,753,753,753,753,753',
'753,753,,,753,,,,,,753,753,,753,753,753,,753,753,753,753,753,,753,753',
'753,,753,753,753,,753,753,,468,,,,,,,,,,,,,,,,468,468,,753,,,753,,,753',
',,753,,753,468,,468,753,468,468,468,468,,,468,753,468,,,,753,753,753',
'753,753,753,,,,753,753,,,,739,739,739,753,739,,753,,739,739,753,753',
',739,,739,739,739,739,739,739,739,,,,,,739,739,739,739,739,739,739,',
',739,,,,,,,739,,,739,739,,739,739,739,739,739,,739,739,739,,739,739',
'739,,739,739,,470,470,470,470,470,470,470,,,470,470,,,,,,470,470,,739',
',,739,,,739,,,739,,,470,,470,739,470,470,470,470,470,470,470,739,470',
',,,739,739,739,739,739,739,,,,739,739,,,,52,52,52,739,52,,739,,52,52',
'739,739,,52,,52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,,,52,,,',
',,,52,,,52,52,,52,52,52,52,52,,52,52,52,,52,52,52,,52,52,,463,,,,,,',
',,,,,,,,,463,463,,52,,,52,,,52,,,52,,,463,,463,52,463,463,463,463,,',
',52,,,,,52,52,52,52,52,52,,,,52,52,,,,53,53,53,52,53,,52,,53,53,52,52',
',53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,',
'53,53,,53,53,53,53,53,53,53,53,53,,53,53,53,,53,53,,462,,,,,,,,,,,,',
',,,462,462,,53,,,53,,,53,,,53,,53,462,,462,53,462,462,462,462,,,,53',
',,,,53,53,53,53,53,53,,,,53,53,,,,54,54,54,53,54,,53,,54,54,53,53,,54',
',54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54',
',54,54,54,54,54,54,54,54,54,,54,54,54,,54,54,,,,,,,,,,,,,,,,,,,,,54',
',,54,,,54,,,54,,,,,,54,,,,,,,,54,,,,,54,54,54,54,54,54,,,,54,54,,,,',
',,54,,,54,,,,54,54,732,732,732,732,732,,,,732,732,,,,732,,732,732,732',
'732,732,732,732,,,,,,732,732,732,732,732,732,732,,,732,,,,,,732,732',
',732,732,732,,732,732,732,732,732,,732,732,732,,732,732,732,,732,732',
',,,,,,,,,,,,,,,,,,,,732,,,732,,,732,,,732,,732,,,,732,,,,,,,,732,,,',
',732,732,732,732,732,732,,,,732,732,,,,,,,732,,,732,,,,732,732,731,731',
'731,731,731,,,,731,731,,,,731,,731,731,731,731,731,731,731,,,,,,731',
'731,731,731,731,731,731,,,731,,,,,,731,731,,731,731,731,,731,731,731',
'731,731,,731,731,731,,731,731,731,,731,731,,,,,,,,,,,,,,,,,,,,,731,',
',731,,,731,,,731,,731,,,,731,,,,,,,,731,,,,,731,731,731,731,731,731',
',,,731,731,,,,57,57,57,731,57,,731,,57,57,731,731,,57,,57,57,57,57,57',
'57,57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,,57,57,57,57,57',
',57,57,57,,57,57,57,,57,57,,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,,,57,,,',
',,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57,57,,,,58,58,58,57,58,,57',
',58,58,57,57,,58,,58,58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58',
',,,,,,58,,,58,58,,58,58,58,58,58,,58,58,58,,58,58,58,,58,58,,,,,,,,',
',,,,,,,,,,,,58,,,58,,,58,,,58,,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58',
',,,58,58,,,,61,61,61,58,61,,58,,61,61,58,58,,61,,61,61,61,61,61,61,61',
',,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,,61,61,61,61,61,,61',
'61,61,,61,61,61,,61,61,,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,,,61,,,,,,61',
',,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,,,,61,61,,,61,,,,61,61',
'62,62,62,,62,,,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62',
'62,62,,,62,,,,,,,62,,,62,62,,62,62,62,62,62,,62,62,62,,62,62,62,321',
',321,321,321,,321,,,,,,,,,,,,,,,,,62,,,62,,,62,,,62,,62,,,,,321,,321',
',,,,,321,321,321,321,62,62,62,62,62,62,,,,62,62,,,,63,63,63,62,63,,62',
',63,63,62,62,,63,,63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63',
',,,,,,63,,,63,63,,63,63,63,63,63,,63,63,63,,63,63,63,,,,,,,,,,,,,,,',
',,,,,63,,,63,,,63,,,63,,,63,,,,,,,,,,,,,,,,,,,63,63,63,63,63,63,,,,63',
'63,,,,,,,63,,,63,,,,63,63,727,727,727,727,727,,,,727,727,,,,727,,727',
'727,727,727,727,727,727,,,,,,727,727,727,727,727,727,727,,,727,,,,,',
'727,727,,727,727,727,,727,727,727,727,727,,727,727,727,,727,727,727',
',727,727,,,,,,,,,,,,,,,,,,,,,727,,,727,,,727,,,727,,727,,,,727,,,,,',
',,727,,,,,727,727,727,727,727,727,,,,727,727,,,,722,722,722,727,722',
',727,,722,722,727,727,,722,,722,722,722,722,722,722,722,,,,,,722,722',
'722,722,722,722,722,,,722,,,,,,,722,,,722,722,,722,722,722,722,722,',
'722,722,722,,722,722,722,,722,722,,,,,,,,,,,,,,,,,,,,,722,,,722,,,722',
',,722,,,,,,722,,,,,,,,722,,,,,722,722,722,722,722,722,,,,722,722,,,',
'716,716,716,722,716,,722,,716,716,722,722,,716,,716,716,716,716,716',
'716,716,,,,,,716,716,716,716,716,716,716,,,716,,,,,,,716,,,716,716,',
'716,716,716,716,716,,716,716,716,,716,716,716,,716,716,,,,,,,,,,,,,',
',,,,,,,716,,,716,,,716,,,716,,716,,,,716,,,,,,,,716,,,,,716,716,716',
'716,716,716,,,,716,716,,,,685,685,685,716,685,,716,,685,685,716,716',
',685,,685,685,685,685,685,685,685,,,,,,685,685,685,685,685,685,685,',
',685,,,,,,,685,,,685,685,,685,685,685,685,685,,685,685,685,,685,685',
'685,,685,685,,,,,,,,,,,,,,,,,,,,,685,,,685,,,685,,,685,,685,,,,685,',
',,,,,,685,,,,,685,685,685,685,685,685,,,,685,685,,,,679,679,679,685',
'679,,685,,679,679,685,685,,679,,679,679,679,679,679,679,679,,,,,,679',
'679,679,679,679,679,679,,,679,,,,,,,679,,,679,679,,679,679,679,679,679',
',679,679,679,,679,679,679,,,,,,,,,,,,,,,,,,,,,,,,679,,,679,,,679,,,679',
',,,,,,,,,,,,,,,,,,679,679,679,679,679,679,,,,679,679,,,,669,669,669',
'679,669,,679,,669,669,679,679,,669,,669,669,669,669,669,669,669,,,,',
',669,669,669,669,669,669,669,,,669,,,,,,,669,,,669,669,,669,669,669',
'669,669,,669,669,669,,669,669,669,,,,,,,,,,,,,,,,,,,,,,,,669,,,669,',
',669,,,669,,,,,,,,,,,,,,,,,,,669,669,669,669,669,669,,,,669,669,,,,',
',,669,,,669,,,,669,669,665,665,665,665,665,,,,665,665,,,,665,,665,665',
'665,665,665,665,665,,,,,,665,665,665,665,665,665,665,,,665,,,,,,665',
'665,,665,665,665,,665,665,665,665,665,,665,665,665,,665,665,665,,665',
'665,,,,,,,,,,,,,,,,,,,,,665,,,665,,,665,,,665,,665,,,,665,,,,,,,,665',
',,,,665,665,665,665,665,665,,,,665,665,,,,,,,665,,,665,,,,665,665,664',
'664,664,664,664,,,,664,664,,,,664,,664,664,664,664,664,664,664,,,,,',
'664,664,664,664,664,664,664,,,664,,,,,,664,664,,664,664,664,,664,664',
'664,664,664,,664,664,664,,664,664,664,,664,664,,,,,,,,,,,,,,,,,,,,,664',
',,664,,,664,,,664,,664,,,,664,,,,,,,,664,,,,,664,664,664,664,664,664',
',,,664,664,,,,658,658,658,664,658,,664,,658,658,664,664,,658,,658,658',
'658,658,658,658,658,,,,,,658,658,658,658,658,658,658,,,658,,,,,,,658',
',,658,658,,658,658,658,658,658,658,658,658,658,,658,658,658,,658,658',
',,,,,,,,,,,,,,,,,,,,658,,,658,,,658,,,658,,,,658,,658,,,,,,,,658,,,',
',658,658,658,658,658,658,,,,658,658,,,,,,,658,,,658,,,,658,658,100,100',
'100,100,100,,,,100,100,,,,100,,100,100,100,100,100,100,100,,,,,,100',
'100,100,100,100,100,100,,,100,,,,,,100,100,100,100,100,100,,100,100',
'100,100,100,,100,100,100,,100,100,100,,100,100,,,,,,,,,,,,,,,,,,,,,100',
',,100,,,100,,,100,,100,,,,100,,,,,,,,100,,,,,100,100,100,100,100,100',
',,,100,100,,,,,,100,100,,,100,,,,100,100,104,104,104,,104,,,,104,104',
',,,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104,104,104,104',
',,104,,,,,,,104,,,104,104,,104,104,104,104,104,,104,104,104,,104,104',
'104,,104,104,,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,104,,,,,,104,,,,',
',,,104,,,,,104,104,104,104,104,104,,,,104,104,,,,105,105,105,104,105',
',104,,105,105,104,104,,105,,105,105,105,105,105,105,105,,,,,,105,105',
'105,105,105,105,105,,,105,,,,,,,105,,,105,105,,105,105,105,105,105,',
'105,105,105,,105,105,105,,105,105,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105',
',,105,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105,,,,105,105,,,',
'106,106,106,105,106,,105,,106,106,105,105,,106,,106,106,106,106,106',
'106,106,,,,,,106,106,106,106,106,106,106,,,106,,,,,,,106,,,106,106,',
'106,106,106,106,106,,106,106,106,,106,106,106,,106,106,,,,,,,,,,,,,',
',,,,,,,106,,,106,,,106,,,106,,,,,,106,,,,,,,,106,,,,,106,106,106,106',
'106,106,,,,106,106,,,,107,107,107,106,107,,106,,107,107,106,106,,107',
',107,107,107,107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107',
',,,,,,107,,,107,107,,107,107,107,107,107,,107,107,107,,107,107,107,',
'107,107,,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,107,,,,,,107,,,,,,,,107',
',,,,107,107,107,107,107,107,,,,107,107,,,,,,,107,,,107,,,,107,107,108',
'108,108,108,108,,,,108,108,,,,108,,108,108,108,108,108,108,108,,,,,',
'108,108,108,108,108,108,108,,,108,,,,,,108,108,,108,108,108,,108,108',
'108,108,108,,108,108,108,,108,108,108,,108,108,,,,,,,,,,,,,,,,,,,,,108',
',,108,,,108,,,108,,108,,,,108,,,,,,,,108,,,,,108,108,108,108,108,108',
',,,108,108,,,,,,,108,,,108,,,,108,108,109,109,109,109,109,,,,109,109',
',,,109,,109,109,109,109,109,109,109,,,,,,109,109,109,109,109,109,109',
',,109,,,,,,109,109,109,109,109,109,,109,109,109,109,109,,109,109,109',
',109,109,109,,109,109,,,,,,,,,,,,,,,,,,,,,109,,,109,,,109,,,109,,109',
',,,109,,,,,,,,109,,,,,109,109,109,109,109,109,,,,109,109,,,,657,657',
'657,109,657,,109,,657,657,109,109,,657,,657,657,657,657,657,657,657',
',,,,,657,657,657,657,657,657,657,,,657,,,,,,,657,,,657,657,,657,657',
'657,657,657,657,657,657,657,,657,657,657,,657,657,,,,,,,,,,,,,,,,,,',
',,657,,,657,,,657,,,657,,657,,657,,657,,,,,,,,657,,,,,657,657,657,657',
'657,657,,,,657,657,,,,,,,657,,,657,,,,657,657,654,654,654,654,654,,',
',654,654,,,,654,,654,654,654,654,654,654,654,,,,,,654,654,654,654,654',
'654,654,,,654,,,,,,654,654,,654,654,654,,654,654,654,654,654,,654,654',
'654,,654,654,654,,654,654,,,,,,,,,,,,,,,,,,,,,654,,,654,,,654,,,654',
',654,,,,654,,,,,,,,654,,,,,654,654,654,654,654,654,,,,654,654,,,,647',
'647,647,654,647,,654,,647,647,654,654,,647,,647,647,647,647,647,647',
'647,,,,,,647,647,647,647,647,647,647,,,647,,,,,,,647,,,647,647,,647',
'647,647,647,647,,647,647,647,,647,647,647,,647,647,,,,,,,,,,,,,,,,,',
',,,647,,,647,,,647,,,647,,,,,,647,,,,,,,,647,,,,,647,647,647,647,647',
'647,,,,647,647,,,,,,,647,,,647,,,,647,647,196,196,196,196,196,,,,196',
'196,,,,196,,196,196,196,196,196,196,196,,,,,,196,196,196,196,196,196',
'196,,,196,,,,,,196,196,,196,196,196,,196,196,196,196,196,,196,196,196',
',196,196,196,,196,196,,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,196,,196',
',,,196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196,,,,197,197',
'197,196,197,,196,,197,197,196,196,,197,,197,197,197,197,197,197,197',
',,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,,197,197',
'197,197,197,,197,197,197,,197,197,197,,197,197,,,,,,,,,,,,,,,,,,,,,197',
',,197,,,197,,,197,,197,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197',
',,,197,197,,,,198,198,198,197,198,,197,,198,198,197,197,,198,,198,198',
'198,198,198,198,198,,,,,,198,198,198,198,198,198,198,,,198,,,,,,,198',
',,198,198,,198,198,198,198,198,,198,198,198,,198,198,198,,198,198,,',
',,,,,,,,,,,,,,,,,,198,,,198,,,198,,,198,,198,,,,198,,,,,,,,198,,,,,198',
'198,198,198,198,198,,,,198,198,,,,199,199,199,198,199,,198,,199,199',
'198,198,,199,,199,199,199,199,199,199,199,,,,,,199,199,199,199,199,199',
'199,,,199,,,,,,,199,,,199,199,,199,199,199,199,199,,199,199,199,,199',
'199,199,,199,199,,,,,,,,,,,,,,,,,,,,,199,,,199,,,199,,,199,,,,,,199',
',,,,,,,199,,,,,199,199,199,199,199,199,,,,199,199,,,,200,200,200,199',
'200,,199,,200,200,199,199,,200,,200,200,200,200,200,200,200,,,,,,200',
'200,200,200,200,200,200,,,200,,,,,,,200,,,200,200,,200,200,200,200,200',
'200,200,200,200,,200,200,200,,200,200,,,,,,,,,,,,,,,,,,,,,200,,,200',
',,200,,,200,,200,,,,200,,,,,,,,200,,,,,200,200,200,200,200,200,,,,200',
'200,,,,,,,200,,,200,,,,200,200,643,643,643,643,643,,,,643,643,,,,643',
',643,643,643,643,643,643,643,,,,,,643,643,643,643,643,643,643,,,643',
',,,,,643,643,,643,643,643,,643,643,643,643,643,,643,643,643,,643,643',
'643,,643,643,,,,,,,,,,,,,,,,,,,,,643,,,643,,,643,,,643,,643,,,,643,',
',,,,,,643,,,,,643,643,643,643,643,643,,,,643,643,,,,639,639,639,643',
'639,,643,,639,639,643,643,,639,,639,639,639,639,639,639,639,,,,,,639',
'639,639,639,639,639,639,,,639,,,,,,,639,,,639,639,,639,639,639,639,639',
',639,639,639,,639,639,639,,639,639,,,,,,,,,,,,,,,,,,,,,639,,,639,,,639',
',,639,,,,,,639,,,,,,,,639,,,,,639,639,639,639,639,639,,,,639,639,,,',
'203,203,203,639,203,,639,,203,203,639,639,,203,,203,203,203,203,203',
'203,203,,,,,,203,203,203,203,203,203,203,,,203,,,,,,,203,,,203,203,',
'203,203,203,203,203,,203,203,203,,203,203,203,,203,203,,,,,,,,,,,,,',
',,,,,,,203,,,203,,,203,,,203,,,,,,203,,,,,,,,203,,,,,203,203,203,203',
'203,203,,,,203,203,,,,204,204,204,203,204,,203,,204,204,203,203,,204',
',204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204,204,,,204',
',,,,,,204,,,204,204,,204,204,204,204,204,,204,204,204,,204,204,204,',
'204,204,,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,,,204,,,,,,204,,,,,,,,204',
',,,,204,204,204,204,204,204,,,,204,204,,,,205,205,205,204,205,,204,',
'205,205,204,204,,205,,205,205,205,205,205,205,205,,,,,,205,205,205,205',
'205,205,205,,,205,,,,,,,205,,,205,205,,205,205,205,205,205,,205,205',
'205,,205,205,205,,205,205,,,,,,,,,,,,,,,,,,,,,205,,,205,,,205,,,205',
',,,,,205,,,,,,,,205,,,,,205,205,205,205,205,205,,,,205,205,,,,631,631',
'631,205,631,,205,,631,631,205,205,,631,,631,631,631,631,631,631,631',
',,,,,631,631,631,631,631,631,631,,,631,,,,,,,631,,,631,631,,631,631',
'631,631,631,,631,631,631,,631,631,631,,631,631,,,,,,,,,,,,,,,,,,,,,631',
',,631,,,631,,,631,,,,,,631,,,,,,,,631,,,,,631,631,631,631,631,631,,',
',631,631,,,,628,628,628,631,628,,631,,628,628,631,631,,628,,628,628',
'628,628,628,628,628,,,,,,628,628,628,628,628,628,628,,,628,,,,,,,628',
',,628,628,,628,628,628,628,628,,628,628,628,,628,628,628,,628,628,,',
',,,,,,,,,,,,,,,,,,628,,,628,,,628,,,628,,,,,,628,,,,,,,,628,,,,,628',
'628,628,628,628,628,,,,628,628,,,,623,623,623,628,623,,628,,623,623',
'628,628,,623,,623,623,623,623,623,623,623,,,,,,623,623,623,623,623,623',
'623,,,623,,,,,,,623,,,623,623,,623,623,623,623,623,,623,623,623,,623',
'623,623,,623,623,,,,,,,,,,,,,,,,,,,,,623,,,623,,,623,,,623,,,,,,623',
',,,,,,,623,,,,,623,623,623,623,623,623,,,,623,623,,,,622,622,622,623',
'622,,623,,622,622,623,623,,622,,622,622,622,622,622,622,622,,,,,,622',
'622,622,622,622,622,622,,,622,,,,,,,622,,,622,622,,622,622,622,622,622',
',622,622,622,,622,622,622,,622,622,,,,,,,,,,,,,,,,,,,,,622,,,622,,,622',
',,622,,,,,,622,,,,,,,,622,,,,,622,622,622,622,622,622,,,,622,622,,,',
'620,620,620,622,620,,622,,620,620,622,622,,620,,620,620,620,620,620',
'620,620,,,,,,620,620,620,620,620,620,620,,,620,,,,,,,620,,,620,620,',
'620,620,620,620,620,,620,620,620,,620,620,620,,620,620,,,,,,,,,,,,,',
',,,,,,,620,,,620,,,620,,,620,,620,,,,620,,,,,,,,620,,,,,620,620,620',
'620,620,620,,,,620,620,,,,618,618,618,620,618,,620,,618,618,620,620',
',618,,618,618,618,618,618,618,618,,,,,,618,618,618,618,618,618,618,',
',618,,,,,,,618,,,618,618,,618,618,618,618,618,,618,618,618,,618,618',
'618,,618,618,,,,,,,,,,,,,,,,,,,,,618,,,618,,,618,,,618,,,,,,618,,,,',
',,,618,,,,,618,618,618,618,618,618,,,,618,618,,,,,,,618,,,618,,,,618',
'618,213,213,213,213,213,,,,213,213,,,,213,,213,213,213,213,213,213,213',
',,,,,213,213,213,213,213,213,213,,,213,,,,,,213,213,,213,213,213,,213',
'213,213,213,213,,213,213,213,,213,213,213,,213,213,,,,,,,,,,,,,,,,,',
',,,213,,,213,,,213,,,213,,213,,,,213,,,,,,,,213,,,,,213,213,213,213',
'213,213,,,,213,213,,,,214,214,214,213,214,,213,,214,214,213,213,,214',
',214,214,214,214,214,214,214,,,,,,214,214,214,214,214,214,214,,,214',
',,,,,,214,,,214,214,,214,214,214,214,214,,214,214,214,,214,214,214,',
'214,214,,,,,,,,,,,,,,,,,,,,,214,,,214,,214,214,,,214,,,,,,214,,,,,,',
',214,,,,,214,214,214,214,214,214,,,,214,214,,,,217,217,217,214,217,',
'214,,217,217,214,214,,217,,217,217,217,217,217,217,217,,,,,,217,217',
'217,217,217,217,217,,,217,,,,,,,217,,,217,217,,217,217,217,217,217,',
'217,217,217,,217,217,217,,217,217,,,,,,,,,,,,,,,,,,,,,217,,,217,,,217',
',,217,,,,,,217,,,,,,,,217,,,,,217,217,217,217,217,217,,,,217,217,,,',
'348,348,348,217,348,,217,,348,348,217,217,,348,,348,348,348,348,348',
'348,348,,,,,,348,348,348,348,348,348,348,,,348,,,,,,,348,,,348,348,',
'348,348,348,348,348,,348,348,348,,348,348,348,,348,348,,,,,,,,,,,,,',
',,,,,,,348,,,348,,,348,,,348,,,,,,348,,,,,,,,348,,,,,348,348,348,348',
'348,348,,,,348,348,,,,219,219,219,348,219,,348,,219,219,348,348,,219',
',219,219,219,219,219,219,219,,,,,,219,219,219,219,219,219,219,,,219',
',,,,,,219,,,219,219,,219,219,219,219,219,,219,219,219,,219,219,219,',
'219,219,,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,219,,,,,,219,,,,,,,,219',
',,,,219,219,219,219,219,219,,,,219,219,,,,220,220,220,219,220,,219,',
'220,220,219,219,,220,,220,220,220,220,220,220,220,,,,,,220,220,220,220',
'220,220,220,,,220,,,,,,,220,,,220,220,,220,220,220,220,220,,220,220',
'220,,220,220,220,,220,220,,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,220',
',,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,,,220,220,,,,221,221',
'221,220,221,,220,,221,221,220,220,,221,,221,221,221,221,221,221,221',
',,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,,221,221',
'221,221,221,,221,221,221,,221,221,221,,221,221,,,,,,,,,,,,,,,,,,,,,221',
',,221,,,221,,,221,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221,,',
',221,221,,,,222,222,222,221,222,,221,,222,222,221,221,,222,,222,222',
'222,222,222,222,222,,,,,,222,222,222,222,222,222,222,,,222,,,,,,,222',
',,222,222,,222,222,222,222,222,,222,222,222,,222,222,222,,222,222,,',
',,,,,,,,,,,,,,,,,,222,,,222,,,222,,,222,,,,,,222,,,,,,,,222,,,,,222',
'222,222,222,222,222,,,,222,222,,,,223,223,223,222,223,,222,,223,223',
'222,222,,223,,223,223,223,223,223,223,223,,,,,,223,223,223,223,223,223',
'223,,,223,,,,,,,223,,,223,223,,223,223,223,223,223,,223,223,223,,223',
'223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,223,,,,,,223',
',,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,,224,224,224,223',
'224,,223,,224,224,223,223,,224,,224,224,224,224,224,224,224,,,,,,224',
'224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,,224,224,224,224,224',
',224,224,224,,224,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224',
',,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224,,,',
'225,225,225,224,225,,224,,225,225,224,224,,225,,225,225,225,225,225',
'225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,',
'225,225,225,225,225,,225,225,225,,225,225,225,,225,225,,,,,,,,,,,,,',
',,,,,,,225,,,225,,,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225',
'225,225,,,,225,225,,,,226,226,226,225,226,,225,,226,226,225,225,,226',
',226,226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226,,,226',
',,,,,,226,,,226,226,,226,226,226,226,226,,226,226,226,,226,226,226,',
'226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,226,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,226,226,,,,226,226,,,,227,227,227,226,227,,226,',
'227,227,226,226,,227,,227,227,227,227,227,227,227,,,,,,227,227,227,227',
'227,227,227,,,227,,,,,,,227,,,227,227,,227,227,227,227,227,,227,227',
'227,,227,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,227',
',,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,,227,227,,,,228,228',
'228,227,228,,227,,228,228,227,227,,228,,228,228,228,228,228,228,228',
',,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,,228,228',
'228,228,228,,228,228,228,,228,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,228',
',,228,,,228,,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,',
',228,228,,,,229,229,229,228,229,,228,,229,229,228,228,,229,,229,229',
'229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229',
',,229,229,,229,229,229,229,229,,229,229,229,,229,229,229,,229,229,,',
',,,,,,,,,,,,,,,,,,229,,,229,,,229,,,229,,,,,,229,,,,,,,,229,,,,,229',
'229,229,229,229,229,,,,229,229,,,,230,230,230,229,230,,229,,230,230',
'229,229,,230,,230,230,230,230,230,230,230,,,,,,230,230,230,230,230,230',
'230,,,230,,,,,,,230,,,230,230,,230,230,230,230,230,,230,230,230,,230',
'230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,230,,,,,,230',
',,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230,,,,231,231,231,230',
'231,,230,,231,231,230,230,,231,,231,231,231,231,231,231,231,,,,,,231',
'231,231,231,231,231,231,,,231,,,,,,,231,,,231,231,,231,231,231,231,231',
',231,231,231,,231,231,231,,231,231,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231',
',,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231,231,,,',
'232,232,232,231,232,,231,,232,232,231,231,,232,,232,232,232,232,232',
'232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,',
'232,232,232,232,232,,232,232,232,,232,232,232,,232,232,,,,,,,,,,,,,',
',,,,,,,232,,,232,,,232,,,232,,,,,,232,,,,,,,,232,,,,,232,232,232,232',
'232,232,,,,232,232,,,,233,233,233,232,233,,232,,233,233,232,232,,233',
',233,233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233,,,233',
',,,,,,233,,,233,233,,233,233,233,233,233,,233,233,233,,233,233,233,',
'233,233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,233,,,,,,233,,,,,,,,233',
',,,,233,233,233,233,233,233,,,,233,233,,,,234,234,234,233,234,,233,',
'234,234,233,233,,234,,234,234,234,234,234,234,234,,,,,,234,234,234,234',
'234,234,234,,,234,,,,,,,234,,,234,234,,234,234,234,234,234,,234,234',
'234,,234,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,234',
',,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,,234,234,,,,235,235',
'235,234,235,,234,,235,235,234,234,,235,,235,235,235,235,235,235,235',
',,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,,235,235',
'235,235,235,,235,235,235,,235,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,235',
',,235,,,235,,,235,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,',
',235,235,,,,236,236,236,235,236,,235,,236,236,235,235,,236,,236,236',
'236,236,236,236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236',
',,236,236,,236,236,236,236,236,,236,236,236,,236,236,236,,236,236,,',
',,,,,,,,,,,,,,,,,,236,,,236,,,236,,,236,,,,,,236,,,,,,,,236,,,,,236',
'236,236,236,236,236,,,,236,236,,,,237,237,237,236,237,,236,,237,237',
'236,236,,237,,237,237,237,237,237,237,237,,,,,,237,237,237,237,237,237',
'237,,,237,,,,,,,237,,,237,237,,237,237,237,237,237,,237,237,237,,237',
'237,237,,237,237,,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,237,,,,,,237',
',,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237,,,,238,238,238,237',
'238,,237,,238,238,237,237,,238,,238,238,238,238,238,238,238,,,,,,238',
'238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,,238,238,238,238,238',
',238,238,238,,238,238,238,,238,238,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238',
',,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238,238,238,,,,238,238,,,',
'239,239,239,238,239,,238,,239,239,238,238,,239,,239,239,239,239,239',
'239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,',
'239,239,239,239,239,,239,239,239,,239,239,239,,239,239,,,,,,,,,,,,,',
',,,,,,,239,,,239,,,239,,,239,,,,,,239,,,,,,,,239,,,,,239,239,239,239',
'239,239,,,,239,239,,,,240,240,240,239,240,,239,,240,240,239,239,,240',
',240,240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240',
',,,,,,240,,,240,240,,240,240,240,240,240,,240,240,240,,240,240,240,',
'240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,240,,,,,,240,,,,,,,,240',
',,,,240,240,240,240,240,240,,,,240,240,,,,241,241,241,240,241,,240,',
'241,241,240,240,,241,,241,241,241,241,241,241,241,,,,,,241,241,241,241',
'241,241,241,,,241,,,,,,,241,,,241,241,,241,241,241,241,241,,241,241',
'241,,241,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,241',
',,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,,,241,241,,,,242,242',
'242,241,242,,241,,242,242,241,241,,242,,242,242,242,242,242,242,242',
',,,,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,,242,242',
'242,242,242,,242,242,242,,242,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242',
',,242,,,242,,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,',
',242,242,,,,243,243,243,242,243,,242,,243,243,242,242,,243,,243,243',
'243,243,243,243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,,,243',
',,243,243,,243,243,243,243,243,,243,243,243,,243,243,243,,243,243,,',
',,,,,,,,,,,,,,,,,,243,,,243,,,243,,,243,,,,,,243,,,,,,,,243,,,,,243',
'243,243,243,243,243,,,,243,243,,,,244,244,244,243,244,,243,,244,244',
'243,243,,244,,244,244,244,244,244,244,244,,,,,,244,244,244,244,244,244',
'244,,,244,,,,,,,244,,,244,244,,244,244,244,244,244,,244,244,244,,244',
'244,244,,244,244,,,,,,,,,,,,,,,,,,,,,244,,,244,,,244,,,244,,,,,,244',
',,,,,,,244,,,,,244,244,244,244,244,244,,,,244,244,,,,589,589,589,244',
'589,,244,,589,589,244,244,,589,,589,589,589,589,589,589,589,,,,,,589',
'589,589,589,589,589,589,,,589,,,,,,,589,,,589,589,,589,589,589,589,589',
',589,589,589,,589,589,589,,589,589,,,,,,,,,,,,,,,,,,,,,589,,,589,,,589',
',,589,,,,,,589,,,,,,,,589,,,,,589,589,589,589,589,589,,,,589,589,,,',
'585,585,585,589,585,,589,,585,585,589,589,,585,,585,585,585,585,585',
'585,585,,,,,,585,585,585,585,585,585,585,,,585,,,,,,,585,,,585,585,',
'585,585,585,585,585,585,585,585,585,,585,585,585,,585,585,,,,,,,,,,',
',,,,,,,,,,585,,,585,,,585,,,585,,585,,,,585,,,,,,,,585,,,,,585,585,585',
'585,585,585,,,,585,585,,,,577,577,577,585,577,,585,,577,577,585,585',
',577,,577,577,577,577,577,577,577,,,,,,577,577,577,577,577,577,577,',
',577,,,,,,,577,,,577,577,,577,577,577,577,577,577,577,577,577,,577,577',
'577,,577,577,,,,,,,,,,,,,,,,,,,,,577,,,577,,,577,,,577,,577,,,,577,',
',,,,,,577,,,,,577,577,577,577,577,577,,,,577,577,,,,253,253,253,577',
'253,,577,,253,253,577,577,,253,,253,253,253,253,253,253,253,,,,,,253',
'253,253,253,253,253,253,,,253,,,,,,,253,,,253,253,,253,253,253,253,253',
',253,253,253,,253,253,253,,253,253,,,,,,,,,,,,,,,,,,,,,253,,,253,,,253',
',,253,,,,,,253,,,,,,,,253,,,,,253,253,253,253,253,253,,,,253,253,,,',
',,,253,,,253,,,,253,253,575,575,575,575,575,,,,575,575,,,,575,,575,575',
'575,575,575,575,575,,,,,,575,575,575,575,575,575,575,,,575,,,,,,575',
'575,,575,575,575,,575,575,575,575,575,,575,575,575,,575,575,575,,575',
'575,,,,,,,,,,,,,,,,,,,,,575,,,575,,,575,,,575,,575,,,,575,,,,,,,,575',
',,,,575,575,575,575,575,575,,,,575,575,,,,255,255,255,575,255,,575,',
'255,255,575,575,,255,,255,255,255,255,255,255,255,,,,,,255,255,255,255',
'255,255,255,,,255,,,,,,,255,,,255,255,,255,255,255,255,255,,255,255',
'255,,255,255,255,,255,255,,,,,,,,,,,,,,,,,,,,,255,,,255,,,255,,,255',
',,,,,255,,,,,,,,255,,,,,255,255,255,255,255,255,,,,255,255,,,,260,260',
'260,255,260,,255,,260,260,255,255,,260,,260,260,260,260,260,260,260',
',,,,,260,260,260,260,260,260,260,,,260,,,,,,,260,,,260,260,,260,260',
'260,260,260,,260,260,260,,260,260,260,,260,260,,,,,,,,,,,,,,,,,,,,,260',
',,260,,,260,,,260,,,,,,260,,,,,,,,260,,,,,260,260,260,260,260,260,,',
',260,260,,,,,,,260,,,260,,,,260,260,570,570,570,570,570,,,,570,570,',
',,570,,570,570,570,570,570,570,570,,,,,,570,570,570,570,570,570,570',
',,570,,,,,,570,570,,570,570,570,,570,570,570,570,570,,570,570,570,,570',
'570,570,,570,570,,,,,,,,,,,,,,,,,,,,,570,,,570,,,570,,,570,,570,,,,570',
',,,,,,,570,,,,,570,570,570,570,570,570,,,,570,570,,,,,,,570,,,570,,',
',570,570,566,566,566,566,566,,,,566,566,,,,566,,566,566,566,566,566',
'566,566,,,,,,566,566,566,566,566,566,566,,,566,,,,,,566,566,,566,566',
'566,,566,566,566,566,566,,566,566,566,,566,566,566,,566,566,,,,,,,,',
',,,,,,,,,,,,566,,,566,,,566,,,566,,566,,,,566,,,,,,,,566,,,,,566,566',
'566,566,566,566,,,,566,566,,,,552,552,552,566,552,,566,,552,552,566',
'566,,552,,552,552,552,552,552,552,552,,,,,,552,552,552,552,552,552,552',
',,552,,,,,,,552,,,552,552,,552,552,552,552,552,,552,552,552,,552,552',
'552,,,,,,,,,,,,,,,,,,,,,,,,552,,,552,,,552,,,552,,,,,,,,,,,,,,,,,,,552',
'552,552,552,552,552,,,,552,552,,,,266,266,266,552,266,,552,,266,266',
'552,552,,266,,266,266,266,266,266,266,266,,,,,,266,266,266,266,266,266',
'266,,,266,,,,,,,266,,,266,266,,266,266,266,266,266,266,266,266,266,',
'266,266,266,,266,266,,,,,,,,,,,,,,,,,,,,,266,,,266,,,266,,,266,,266',
',266,,266,,,,,,,,266,,,,,266,266,266,266,266,266,,,,266,266,,,,267,267',
'267,266,267,,266,,267,267,266,266,,267,,267,267,267,267,267,267,267',
',,,,,267,267,267,267,267,267,267,,,267,,,,,,,267,,,267,267,,267,267',
'267,267,267,267,267,267,267,,267,267,267,,267,267,,,,,,,,,,,,,,,,,,',
',,267,,,267,,,267,,,267,,267,,267,,267,,,,,,,,267,,,,,267,267,267,267',
'267,267,,,,267,267,,,,275,275,275,267,275,,267,,275,275,267,267,,275',
',275,275,275,275,275,275,275,,,,,,275,275,275,275,275,275,275,,,275',
',,,,,,275,,,275,275,,275,275,275,275,275,275,275,275,275,,275,275,275',
',275,275,,,,,,,,,,,,,,,,,,,,,275,,,275,,275,275,,,275,,275,,275,,275',
',,,,,,,275,,,,,275,275,275,275,275,275,,,,275,275,,,,,,,275,,,275,,',
',275,275,546,546,546,546,546,,,,546,546,,,,546,,546,546,546,546,546',
'546,546,,,,,,546,546,546,546,546,546,546,,,546,,,,,,546,546,,546,546',
'546,,546,546,546,546,546,,546,546,546,,546,546,546,,546,546,,,,,,,,',
',,,,,,,,,,,,546,,,546,,,546,,,546,,546,,,,546,,,,,,,,546,,,,,546,546',
'546,546,546,546,,,,546,546,,,,,,,546,,,546,,,,546,546,545,545,545,545',
'545,,,,545,545,,,,545,,545,545,545,545,545,545,545,,,,,,545,545,545',
'545,545,545,545,,,545,,,,,,545,545,,545,545,545,,545,545,545,545,545',
',545,545,545,,545,545,545,,545,545,,,,,,,,,,,,,,,,,,,,,545,,,545,,,545',
',,545,,545,,,,545,,,,,,,,545,,,,,545,545,545,545,545,545,,,,545,545',
',,,540,540,540,545,540,,545,,540,540,545,545,,540,,540,540,540,540,540',
'540,540,,,,,,540,540,540,540,540,540,540,,,540,,,,,,,540,,,540,540,',
'540,540,540,540,540,540,540,540,540,,540,540,540,,540,540,,,,,,,,,,',
',,,,,,,,,,540,,,540,,,540,,,540,,,,,,540,,,,,,,,540,,,,,540,540,540',
'540,540,540,,,,540,540,,,,,,,540,,,540,,,,540,540,279,279,279,279,279',
',,,279,279,,,,279,,279,279,279,279,279,279,279,,,,,,279,279,279,279',
'279,279,279,,,279,,,,,,279,279,,279,279,279,,279,279,279,279,279,,279',
'279,279,,279,279,279,,279,279,,,,,,,,,,,,,,,,,,,,,279,,,279,,,279,,',
'279,,279,,,,279,,,,,,,,279,,,,,279,279,279,279,279,279,,,,279,279,,',
',537,537,537,279,537,,279,,537,537,279,279,,537,,537,537,537,537,537',
'537,537,,,,,,537,537,537,537,537,537,537,,,537,,,,,,,537,,,537,537,',
'537,537,537,537,537,537,537,537,537,,537,537,537,,537,537,,,,,,,,,,',
',,,,,,,,,,537,,,537,,,537,,,537,,537,,,,537,,,,,,,,537,,,,,537,537,537',
'537,537,537,,,,537,537,,,,531,531,531,537,531,,537,,531,531,537,537',
',531,,531,531,531,531,531,531,531,,,,,,531,531,531,531,531,531,531,',
',531,,,,,,,531,,,531,531,,531,531,531,531,531,,531,531,531,,531,531',
'531,,531,531,,,,,,,,,,,,,,,,,,,,,531,,,531,,,531,,,531,,,,,,531,,,,',
',,,531,,,,,531,531,531,531,531,531,,,,531,531,,,,527,527,527,531,527',
',531,,527,527,531,531,,527,,527,527,527,527,527,527,527,,,,,,527,527',
'527,527,527,527,527,,,527,,,,,,,527,,,527,527,,527,527,527,527,527,',
'527,527,527,,527,527,527,,527,527,,,,,,,,,,,,,,,,,,,,,527,,,527,,,527',
',,527,,,,,,527,,,,,,,,527,,,,,527,527,527,527,527,527,,,,527,527,,,',
'283,283,283,527,283,,527,,283,283,527,527,,283,,283,283,283,283,283',
'283,283,,,,,,283,283,283,283,283,283,283,,,283,,,,,,,283,,,283,283,',
'283,283,283,283,283,,283,283,283,,283,283,283,,,,,,,,,,,,,,,,,,,,,,',
',283,,,283,,,283,,,283,,,,,,,,,,,,,,,,,,,283,283,283,283,283,283,,,',
'283,283,,,,283,,,283,,,283,,,,283,283,284,284,284,284,284,,,,284,284',
',,,284,,284,284,284,284,284,284,284,,,,,,284,284,284,284,284,284,284',
',,284,,,,,,284,284,,284,284,284,,284,284,284,284,284,,284,284,284,,284',
'284,284,,284,284,,,,,,,,,,,,,,,,,,,,,284,,,284,,,284,,,284,,284,,,,284',
',,,,,,,284,,,,,284,284,284,284,284,284,,,,284,284,,,,526,526,526,284',
'526,,284,,526,526,284,284,,526,,526,526,526,526,526,526,526,,,,,,526',
'526,526,526,526,526,526,,,526,,,,,,,526,,,526,526,,526,526,526,526,526',
',526,526,526,,526,526,526,,526,526,,,,,,,,,,,,,,,,,,,,,526,,,526,,,526',
',,526,,,,,,526,,,,,,,,526,,,,,526,526,526,526,526,526,,,,526,526,,,',
'525,525,525,526,525,,526,,525,525,526,526,,525,,525,525,525,525,525',
'525,525,,,,,,525,525,525,525,525,525,525,,,525,,,,,,,525,,,525,525,',
'525,525,525,525,525,,525,525,525,,525,525,525,,525,525,,,,,,,,,,,,,',
',,,,,,,525,,,525,,,525,,,525,,,,,,525,,,,,,,,525,,,,,525,525,525,525',
'525,525,,,,525,525,,,,516,516,516,525,516,,525,,516,516,525,525,,516',
',516,516,516,516,516,516,516,,,,,,516,516,516,516,516,516,516,,,516',
',,,,,,516,,,516,516,,516,516,516,516,516,516,516,516,516,,516,516,516',
',516,516,,,,,,,,,,,,,,,,,,,,,516,,,516,,,516,,,516,,516,,,,516,,,,,',
',,516,,,,,516,516,516,516,516,516,,,,516,516,,,,514,514,514,516,514',
',516,,514,514,516,516,,514,,514,514,514,514,514,514,514,,,,,,514,514',
'514,514,514,514,514,,,514,,,,,,,514,,,514,514,,514,514,514,514,514,',
'514,514,514,,514,514,514,,,,,,,,,,,,,,,,,,,,,,,,514,,,514,,,514,,,514',
',,,,,,,,,,,,,,,,,,514,514,514,514,514,514,,,,514,514,,,,,,,514,,,514',
',,,514,514,508,508,508,508,508,,,,508,508,,,,508,,508,508,508,508,508',
'508,508,,,,,,508,508,508,508,508,508,508,,,508,,,,,,508,508,,508,508',
'508,,508,508,508,508,508,,508,508,508,,508,508,508,,508,508,,,,,,,,',
',,,,,,,,,,,,508,,,508,,,508,,,508,,508,,,,508,,,,,,,,508,,,,,508,508',
'508,508,508,508,,,,508,508,,,,,,508,508,,,508,,,,508,508,502,502,502',
',502,,,,502,502,,,,502,,502,502,502,502,502,502,502,,,,,,502,502,502',
'502,502,502,502,,,502,,,,,,,502,,,502,502,,502,502,502,502,502,,502',
'502,502,,502,502,502,,502,502,,,,,,,,,,,,,,,,,,,,,502,,,502,,502,502',
',,502,,,,502,,502,,,,,,,,502,,,,,502,502,502,502,502,502,,,,502,502',
',,,486,486,486,502,486,,502,,486,486,502,502,,486,,486,486,486,486,486',
'486,486,,,,,,486,486,486,486,486,486,486,,,486,,,,,,,486,,,486,486,',
'486,486,486,486,486,,486,486,486,,486,486,486,,486,486,,,,,,,,,,,,,',
',,,,,,,486,,,486,,,486,,,486,,,,,,486,,,,,,,,486,,,,,486,486,486,486',
'486,486,,,,486,486,,,,484,484,484,486,484,,486,,484,484,486,486,,484',
',484,484,484,484,484,484,484,,,,,,484,484,484,484,484,484,484,,,484',
',,,,,,484,,,484,484,,484,484,484,484,484,484,484,484,484,,484,484,484',
',484,484,,,,,,,,,,,,,,,,,,,,,484,,,484,,,484,,,484,,,,484,,484,,,,,',
',,484,,,,,484,484,484,484,484,484,,,,484,484,,,,482,482,482,484,482',
',484,,482,482,484,484,,482,,482,482,482,482,482,482,482,,,,,,482,482',
'482,482,482,482,482,,,482,,,,,,,482,,,482,482,,482,482,482,482,482,482',
'482,482,482,,482,482,482,,482,482,,,,,,,,,,,,,,,,,,,,,482,,,482,,,482',
',,482,,482,,482,,482,,,,,,,,482,,,,,482,482,482,482,482,482,,,,482,482',
',,,296,296,296,482,296,,482,,296,296,482,482,,296,,296,296,296,296,296',
'296,296,,,,,,296,296,296,296,296,296,296,,,296,,,,,,,296,,,296,296,',
'296,296,296,296,296,,296,296,296,,296,296,296,,,,,,,,,,,,,,,,,,,,,,',
',296,,,296,,,296,,,296,,,,,,,,,,,,,,,,,,,296,296,296,296,296,296,,,',
'296,296,,,,451,451,451,296,451,,296,,451,451,296,296,,451,,451,451,451',
'451,451,451,451,,,,,,451,451,451,451,451,451,451,,,451,,,,,,,451,,,451',
'451,,451,451,451,451,451,,451,451,451,,451,451,451,,451,451,,,,,,,,',
',,,,,,,,,,,,451,,,451,,,451,,,451,,,,,,451,,,,,,,,451,,,,,451,451,451',
'451,451,451,,,,451,451,,,,450,450,450,451,450,,451,,450,450,451,451',
',450,,450,450,450,450,450,450,450,,,,,,450,450,450,450,450,450,450,',
',450,,,,,,,450,,,450,450,,450,450,450,450,450,,450,450,450,,450,450',
'450,,450,450,,,,,,,,,,,,,,,,,,,,,450,,,450,,,450,,,450,,,,,,450,,,,',
',,,450,,,,,450,450,450,450,450,450,,,,450,450,,,,449,449,449,450,449',
',450,,449,449,450,450,,449,,449,449,449,449,449,449,449,,,,,,449,449',
'449,449,449,449,449,,,449,,,,,,,449,,,449,449,,449,449,449,449,449,',
'449,449,449,,449,449,449,,449,449,,,,,,,,,,,,,,,,,,,,,449,,,449,,,449',
',,449,,,,,,449,,,,,,,,449,,,,,449,449,449,449,449,449,,,,449,449,,,',
'447,447,447,449,447,,449,,447,447,449,449,,447,,447,447,447,447,447',
'447,447,,,,,,447,447,447,447,447,447,447,,,447,,,,,,,447,,,447,447,',
'447,447,447,447,447,447,447,447,447,,447,447,447,,447,447,,,,,,,,,,',
',,,,,,,,,,447,,,447,,,447,,,447,,447,,,,447,,,,,,,,447,,,,,447,447,447',
'447,447,447,,,,447,447,,,,421,421,421,447,421,,447,,421,421,447,447',
',421,,421,421,421,421,421,421,421,,,,,,421,421,421,421,421,421,421,',
',421,,,,,,,421,,,421,421,,421,421,421,421,421,,421,421,421,,421,421',
'421,,421,421,,,,,,,,,,,,,,,,,,,,,421,,,421,,,421,,,421,,,,,,421,,,,',
',,,421,,,,,421,421,421,421,421,421,,,,421,421,,,,306,306,306,421,306',
',421,,306,306,421,421,,306,,306,306,306,306,306,306,306,,,,,,306,306',
'306,306,306,306,306,,,306,,,,,,,306,,,306,306,,306,306,306,306,306,',
'306,306,306,,306,306,306,,306,306,,,,,,,,,,,,,,,,,,,,,306,,,306,306',
',306,,,306,,,,,,306,,,,,,,,306,,,,,306,306,306,306,306,306,,,,306,306',
',,,,,,306,,,306,,,,306,306,308,308,308,308,308,,,,308,308,,,,308,,308',
'308,308,308,308,308,308,,,,,,308,308,308,308,308,308,308,,,308,,,,,',
'308,308,,308,308,308,,308,308,308,308,308,,308,308,308,,308,308,308',
',308,308,,,,,,,,,,,,,,,,,,,,,308,,,308,,,308,,,308,,308,,,,308,,,,,',
',,308,,,,,308,308,308,308,308,308,,,,308,308,,,,380,380,380,308,380',
',308,,380,380,308,308,,380,,380,380,380,380,380,380,380,,,,,,380,380',
'380,380,380,380,380,,,380,,,,,,,380,,,380,380,,380,380,380,380,380,',
'380,380,380,,380,380,380,,380,380,,,,,,,,,,,,,,,,,,,,,380,,,380,,,380',
',,380,,,,,,380,,,,,,,,380,,,,,380,380,380,380,380,380,,,,380,380,,,',
'368,368,368,380,368,,380,,368,368,380,380,,368,,368,368,368,368,368',
'368,368,,,,,,368,368,368,368,368,368,368,,,368,,,,,,,368,,,368,368,',
'368,368,368,368,368,,368,368,368,,368,368,368,,,,,,,,,,,,,,,,,,,,,,',
',368,,,368,,,368,,,368,,,,,,,,,,,,,,,,,,,368,368,368,368,368,368,,,',
'368,368,,,,349,349,349,368,349,,368,,349,349,368,368,,349,,349,349,349',
'349,349,349,349,,,,,,349,349,349,349,349,349,349,,,349,,,,,,,349,,,349',
'349,,349,349,349,349,349,,349,349,349,,349,349,349,,349,349,,,,,,,,',
',,,,,,,,,,,,349,,,349,,,349,,,349,,,,,,349,,,,,,,,349,,,,,349,349,349',
'349,349,349,,,,349,349,,,,591,591,591,349,591,,349,,591,591,349,349',
',591,,591,591,591,591,591,591,591,,,,,,591,591,591,591,591,591,591,',
',591,,,,,,,591,,,591,591,,591,591,591,591,591,,591,591,591,,591,591',
'591,,591,591,,,,,,,,,,,,,,,,,,,,,591,,,591,,,591,,835,591,835,835,835',
'835,835,591,,,,,,,,591,,835,,437,591,591,591,591,591,591,437,437,437',
'591,591,,437,437,,437,,591,,835,591,,,,591,591,,835,835,835,835,,,,',
'437,437,,437,437,437,437,437,,,,,733,,733,733,733,733,733,,,,,,,,,,',
'733,835,,437,437,437,437,437,437,437,437,437,437,437,437,437,437,,,437',
'437,437,733,437,,,,437,,,733,733,733,733,437,,437,,437,437,437,437,437',
'437,437,,437,,437,,,,,,,,,,,,,437,437,,437,,437,635,733,437,,,437,,635',
'635,635,,,635,635,635,894,635,894,894,894,894,894,,,,,635,635,,,,,894',
',,,635,635,,635,635,635,635,635,,,,,,,,,,,894,894,,,,,,,894,894,894',
'894,,,635,635,635,635,635,635,635,635,635,635,635,635,635,635,,,635',
'635,635,,635,635,,,635,,,635,,635,,635,894,635,,635,635,635,635,635',
'635,635,,635,,635,,,,,,,,,,,,,635,635,635,635,,635,85,,635,,,635,,85',
'85,85,,,85,85,85,593,85,593,593,593,593,593,,,85,,85,85,85,,,,593,,',
',85,85,,85,85,85,85,85,,,,,,,,,,,593,593,,,,,,,593,593,593,593,,,85',
'85,85,85,85,85,85,85,85,85,85,85,85,85,,,85,85,85,,85,85,,,85,,,85,',
'85,,85,593,85,,85,85,85,85,85,85,85,,85,,85,,,,,,,,,,,,,85,85,85,85',
',85,435,85,85,,,85,,435,435,435,,,,435,435,,435,,,,,,,,,435,,,,,,,,',
',,435,435,,435,435,435,435,435,,,,,,,,,,,,,,,,,,,,,,,,,435,435,435,435',
'435,435,435,435,435,435,435,435,435,435,,,435,435,435,,435,,,,435,,',
',,,,435,,435,,435,435,435,435,435,435,435,,435,435,435,,,,,,,,,,,,,435',
'435,,435,,435,634,,435,,,435,,634,634,634,,,634,634,634,,634,,,,,,,',
',634,634,634,,,,,,,,,634,634,,634,634,634,634,634,,,,,,,,,,,,,,,,,,',
',,,,,,634,634,634,634,634,634,634,634,634,634,634,634,634,634,,,634',
'634,634,,634,634,,,634,,,634,,634,,634,,634,,634,634,634,634,634,634',
'634,,634,634,634,,,,,,,,,,,,,634,634,634,634,,634,88,,634,,,634,,88',
'88,88,,,88,88,88,,88,,,,,,,,88,,88,88,88,,,,,,,,88,88,,88,88,88,88,88',
',,,,,,,,,,,,,,,,,,,,,,,,88,88,88,88,88,88,88,88,88,88,88,88,88,88,,',
'88,88,88,,88,88,,,88,,,88,,88,,88,,88,,88,88,88,88,88,88,88,,88,,88',
',,,,,,,,,,,,88,88,88,88,,88,27,88,88,,,88,,27,27,27,,,27,27,27,,27,',
',,,,,,,27,27,27,,,,,,,,,27,27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,',
',,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27,27,',
',27,,27,,27,,27,,27,27,27,27,27,27,27,,27,27,27,,,,,,,,,,,,,27,27,27',
'27,439,27,,,27,,,439,439,439,,,439,439,439,,439,,,,,,,,,439,439,439',
'439,,,,,,,,439,439,,439,439,439,439,439,,,,,,,,,,,,,,,,,,,,,,,,,439',
'439,439,439,439,439,439,439,439,439,439,439,439,439,,,439,439,439,,',
'439,,,439,,,439,,439,,439,,439,,439,439,439,439,439,439,439,,439,439',
'439,,,,,,,,,,,,,439,439,439,439,431,439,,439,439,,,431,431,431,,,431',
'431,431,,431,,,,,,,,,431,431,431,,,,,,,,,431,431,,431,431,431,431,431',
',,,,,,,,,,,,,,,,,,,,,,,,431,431,431,431,431,431,431,431,431,431,431',
'431,431,431,,,431,431,431,,,431,,431,431,,,431,,431,,431,,431,,431,431',
'431,431,431,431,431,,431,431,431,,,,,,,,,,,,,431,431,431,431,440,431',
',,431,,,440,440,440,,,440,440,440,,440,,,,,,,,,440,440,440,440,,,,,',
',,440,440,,440,440,440,440,440,,,,,,,,,,,,,,,,,,,,,,,,,440,440,440,440',
'440,440,440,440,440,440,440,440,440,440,,,440,440,440,,,440,,,440,,',
'440,,440,,440,,440,,440,440,440,440,440,440,440,,440,440,440,,,,,,,',
',,,,,440,440,440,440,28,440,,440,440,,,28,28,28,,,28,28,28,,28,,,,,',
',,,,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,,28',
',28,,28,,28,28,28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,50,28',
',,28,,,50,50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50,,50,50',
'50,50,50,,,,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50',
'50,50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50',
',50,,,,,,,,,,,,,50,50,50,50,489,50,,50,50,,,489,489,489,,,489,489,489',
',489,,,,,,,,,,489,,,,,,,,,,489,489,,489,489,489,489,489,,,,,,,,,,,,',
',492,,,,,,,492,492,492,,,492,492,492,,492,,,,,,489,,,,492,,,489,,,,',
'489,489,492,492,,492,492,492,492,492,,,,,,,,,,,,,489,,,,,,,,,,,,,489',
',489,,,489,,,,,492,,,,,,,492,,,,,492,492,,,,,,,,,,,,,,,,,,,,,492,,,',
',,,,,,,,,492,,492,,,492,411,411,411,411,411,411,411,411,411,411,411',
'411,411,411,411,411,411,411,411,411,411,411,411,411,,,,411,411,411,411',
'411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411',
',411,411,,,411,,,,,,,,,,411,411,,411,411,411,411,411,411,411,,,411,411',
',,,411,411,411,411,,,,,,,,,,,,,411,411,,411,411,411,411,411,411,411',
'411,411,411,411,,,411,411,,,,,,,,,,411,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,7',
'7,,7,,,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7',
'7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,8,8,,',
'8,,,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8',
'8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,415,415,415,415,415,415,415,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,,,,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415',
'415,415,,415,415,,,415,,,,,,,,,,415,415,,415,415,415,415,415,415,415',
',,415,415,,,,415,415,415,415,,,,,,,,,,,,,415,415,,415,415,415,415,415',
'415,415,415,415,415,415,,,415,415,,,,,,,,,,415,750,750,750,750,750,750',
'750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750',
'750,,,,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750',
'750,750,750,750,750,,750,750,,,750,,,,,,,,,,750,750,,750,750,750,750',
'750,750,750,,,750,750,,,,750,750,750,750,,,,,,,,,,,,,750,750,,750,750',
'750,750,750,750,750,750,750,750,750,,,750,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,,79,79,79,79,79,,79,,,,,,',
',79,79,,79,79,79,79,79,79,79,,,79,79,,,,79,79,79,79,,,,,,,,,,,,,79,79',
',79,79,79,79,79,79,79,79,79,79,79,,,79,193,193,193,193,193,193,193,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,,,,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193',
'193,193,193,,193,193,193,193,193,,193,,,,,,,,193,193,,193,193,193,193',
'193,193,193,,,193,193,,,,193,193,193,193,,,,,,,,,,,,,193,193,,193,193',
'193,193,193,193,193,193,193,193,193,,,193,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,,65,65,65,65,65,,65,,,,,,',
',65,65,,65,65,65,65,65,65,65,,,65,65,,,,65,65,65,65,,,,,,65,,,,,,,65',
'65,,65,65,65,65,65,65,65,65,65,65,65,446,446,65,,446,,,,,,,,,,446,446',
',446,446,446,446,446,446,446,,,446,446,,,,446,446,446,446,,,,,,,,,,',
',,446,446,,446,446,446,446,446,446,446,446,446,446,446,586,586,446,',
'586,,,,,,,,,,586,586,,586,586,586,586,586,586,586,,,586,586,,,,586,586',
'586,586,,,,,,586,,,,,,,586,586,,586,586,586,586,586,586,586,586,586',
'586,586,584,584,586,,584,,,,,,,,,,584,584,,584,584,584,584,584,584,584',
',,584,584,,,,584,584,584,584,,,,,,,,,,,,,584,584,,584,584,584,584,584',
'584,584,584,584,584,584,445,445,584,,445,,,,,,,,,,445,445,,445,445,445',
'445,445,445,445,,,445,445,,,,445,445,445,445,,,,,,445,,,,,,,445,445',
',445,445,445,445,445,445,445,445,445,445,445,579,579,445,,579,,,,,,',
',,,579,579,,579,579,579,579,579,579,579,,,579,579,,,,579,579,579,579',
',,,,,,,,,,,,579,579,,579,579,579,579,579,579,579,579,579,579,579,578',
'578,579,,578,,,,,,,,,,578,578,,578,578,578,578,578,578,578,,,578,578',
',,,578,578,578,578,,,,,,578,,,,,,,578,578,,578,578,578,578,578,578,578',
'578,578,578,578,922,922,578,,922,,,,,,,,,,922,922,,922,922,922,922,922',
'922,922,,,922,922,,,,922,922,922,922,,,,,,922,,,,,,,922,922,,922,922',
'922,922,922,922,922,922,922,922,922,923,923,922,,923,,,,,,,,,,923,923',
',923,923,923,923,923,923,923,,,923,923,,,,923,923,923,923,,,,,,,,,,',
',,923,923,,923,923,923,923,923,923,923,923,923,923,923,263,263,923,',
'263,,,,,,,,,,263,263,,263,263,263,263,263,263,263,,,263,263,,,,263,263',
'263,263,,,,,,,,,,,,,263,263,,263,263,263,263,263,263,263,263,263,263',
'263,264,264,263,,264,,,,,,,,,,264,264,,264,264,264,264,264,264,264,',
',264,264,,,,264,264,264,264,,,,,,,,,,,,,264,264,,264,264,264,264,264',
'264,264,264,264,264,264,529,529,264,,529,,,,,,,,,,529,529,,529,529,529',
'529,529,529,529,,,529,529,,,,529,529,529,529,,,,,,,,,,,,,529,529,,529',
'529,529,529,529,529,529,529,529,529,529,202,202,529,,202,,,,,,,,,,202',
'202,,202,202,202,202,202,202,202,,,202,202,,,,202,202,202,202,,,,,,',
',,,,,,202,202,,202,202,202,202,202,202,202,202,202,202,202,518,518,202',
',518,,,,,,,,,,518,518,,518,518,518,518,518,518,518,,,518,518,,,,518',
'518,518,518,,,,,,,,,,,,,518,518,,518,518,518,518,518,518,518,518,518',
'518,518,517,517,518,,517,,,,,,,,,,517,517,,517,517,517,517,517,517,517',
',,517,517,,,,517,517,517,517,,,,,,517,,,,,,,517,517,,517,517,517,517',
'517,517,517,517,517,517,517,201,201,517,,201,,,,,,,,,,201,201,,201,201',
'201,201,201,201,201,,,201,201,,,,201,201,201,201,,,,,,201,,,,,,,201',
'201,,201,201,201,201,201,201,201,201,201,201,201,802,802,201,,802,,',
',,,,,,,802,802,,802,802,802,802,802,802,802,,,802,802,,,,802,802,802',
'802,,,,,,,,,,,,,802,802,,802,802,802,802,802,802,802,802,802,802,802',
'528,528,802,,528,,,,,,,,,,528,528,,528,528,528,528,528,528,528,,,528',
'528,,,,528,528,528,528,,,,,,528,,,,,,,528,528,,528,528,528,528,528,528',
'528,528,528,528,528,,,528' ]
        racc_action_check = arr = ::Array.new(23987, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1169,   nil,   -22,   nil,  1086,  1024, 22124, 22248,   969,
   943,   939,   971,   403,   635,   575,   nil,  1860,  1987,  2253,
   919,   nil,  2380,  2507,  2634,   684,   -11, 21033, 21553,   nil,
  3305,  3432,  3559,   nil,   743,   412,   809,   215,  4206,  4333,
  4460,   709,   563,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 21683,   nil,  4980,  5107,  5234,   -15,  3572,  5639,  5766,   nil,
   nil,  5893,  6032,  6159,   nil, 22835,   nil,   nil,   nil,   nil,
   nil,   -62,   nil,   nil,   nil,   nil,   nil,   496,   263, 22609,
   nil,   nil,   nil,   nil,   354, 20505,   nil,   nil, 20901,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   291,   nil,
  7477,   nil,   nil,   nil,  7616,  7743,  7870,  7997,  8136,  8275,
   nil,   497,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 22722,   273,   nil,  8807,  8934,  9061,  9188,
  9315, 23750, 23567,  9708,  9835,  9962,   nil,   531,   168,   608,
   202,   553,   606, 10863, 10990,   nil,   nil, 11117,   618, 11371,
 11498, 11625, 11752, 11879, 12006, 12133, 12260, 12387, 12514, 12641,
 12768, 12895, 13022, 13149, 13276, 13403, 13530, 13657, 13784, 13911,
 14038, 14165, 14292, 14419, 14546,   nil,   nil,   nil,  1479,   nil,
   589,   592,   nil, 15054,   642, 15320,   nil,   nil,   nil,   nil,
 15447,   nil,   nil, 23384, 23445,   735, 15979, 16106,   nil,   nil,
   nil,   nil,   nil,   nil,   nil, 16233,   647,  1071,   758, 16777,
   760,   776,   746, 17285, 17424,   534,   542,   850,   539,   851,
   828,    -2,   nil,   920,   506,   nil, 18718,   nil,   707,   968,
   970,   nil,   499,   nil,  1030,   nil, 19480,   nil, 19619,   235,
   nil,  1006,   302,   314,  1112,  1087,   230,  1110,   nil,   nil,
     6,  6045,   nil,   nil,   nil,  1069,  1049,   nil,  1048,  1046,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1397,   nil,   nil,
   nil,  1123,   nil,   nil,  1121,   267,    36,    -7, 11244, 20000,
   591,   222,  1034,    75,   530,  1098,    78,  1122,   nil,   nil,
   -14,  1087,   nil,   311,   nil,    68,   nil,   nil, 19873,   312,
   690,    82,   641,   609,   450,   412,   681,   nil,   662,   nil,
 19746,   nil,   264,   nil,   246,   nil,   228,   999,   250,   nil,
   979,   -53,   nil,   403,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   987, 22000,   nil,   nil,   nil, 22372,   986,   nil,   nil,   403,
   nil, 19353,   939,   nil,   918,   nil,   nil,  1733,   949,   429,
   514, 21293,   nil,   nil,   nil, 20637,   948, 20241,   nil, 21163,
 21423,   nil,  1336,   nil,   nil, 23079, 22896, 19226,     4, 19099,
 18972, 18845,   -11,   nil,  3825,  2900,   974,   835,   962,   961,
   958,   946,  5107,  4980,  3189,  3039,  3166,  4333,  4726,  4460,
  4853,  4206,  4079,  3952,  3305,  2773,  2741,  3698,  4587,   947,
   -41,   nil, 18591,   nil, 18464,   nil, 18337,   nil,   nil, 21813,
   nil,   nil, 21870,   318,   nil,   881,   nil,   nil,   854,   834,
   nil,   nil, 18210,   301,   269,   853,   nil,   nil, 18071,   844,
   802,   nil,   nil,   801, 17932,   829, 17805, 23689, 23628,   363,
   806,   nil,   nil,   758,   nil, 17678, 17551, 17158, 23872, 23506,
  1606, 17031,   851,   846,   762,   nil,   nil, 16904,   nil,   nil,
 16638,   nil,   nil,   nil,   nil, 16511, 16372,   741,   nil,   547,
   nil,   nil, 15852,  3485,   nil,   -61,   nil,   nil,   732,   nil,
  2759,   nil,   688,   794,   nil,   nil, 15725,   769,   nil,   nil,
 15586,   127,   207,   729,   728, 15193,   nil, 14927, 23201, 23140,
    43,   nil,   545,   nil, 23018, 14800, 22957,   nil,   nil, 14673,
   549, 20127,   nil, 20469,   nil,   nil,   nil,    39,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -48,   nil,
   nil,   nil,   578,   nil,   nil,   nil,   nil,   nil, 10724,   564,
 10597,   226, 10470, 10343,   553,   nil,   nil,   nil, 10216,   540,
   nil, 10089,   -47,   163, 20769, 20373,   493,   681,   nil,  9581,
   nil,  3445,   nil,  9454,   450,   nil,   414,  8668,   nil,   nil,
   nil,   nil,   nil,   nil,  8541,   nil,   256,  8402,  7338,   808,
   160,   nil,   nil,   127,  7211,  7072,   nil,   932,   132,  6933,
    84,   nil,   -29,    79,   125,    59,    60,   267,   157,  6806,
  2114,   266,   274,     1,   356,  6679,   nil,   nil,    40,   340,
   450,   nil,   nil,   333,   nil,   357,   258,   476,   404,   425,
   nil,   nil,   478,  1371,   nil,   481,   nil,   578,   nil,   nil,
   nil,   nil,   nil,   605,   nil,   606,  6552,   541,    81,   110,
   172,   101,  6425,   261,   nil,   614,   611,  6298,   676,   nil,
   210,  5512,  5373, 20238,   313,   nil,   nil,   724,   nil,  4853,
   nil,   664,   665,   nil,   674,   675,   680,   nil,   678,   nil,
 22496,   730,   902,  4726,   nil,   nil,   nil,  2380,   705,  4587,
  4079,   nil,  2507,   nil,  1987,   nil,   nil,  1860,   nil,  1086,
  3952,  3825,  3698,   -30,  2634,   nil,   781,   882,   nil,   nil,
   781,   nil,   767,  3166,   nil,   786,   891,   773,   544,   nil,
   nil,   912,   nil,  3039,   793,   840,   nil,   nil,   nil,   nil,
   nil,   nil, 23811,   nil,   555,   nil,   nil,   nil,   nil,   933,
   932,   nil,  2900,   935,  2773,  2253,   nil,   nil,   100,   -18,
   106,   nil,   980,   nil,   nil,   984,   988,   877,   nil,   nil,
   nil,   275,   nil,   nil,   329, 20171,   nil,   483,   nil,   264,
   nil,  2114,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   920,
   906,   nil,  1213,  1733,   nil,   nil,   nil,  1606,   912,   nil,
   nil,   nil,  1479,   nil,   nil,    67,  1340,   nil,   969,   932,
   nil,   nil,    74,   nil,  1060,  1061,  1213,  1086,   nil,   nil,
   947,   nil,   nil,   991,   nil,   955,   nil,   nil,   956,   964,
   965,   958,   nil,   nil, 20337,   nil,   nil,   808,   nil,   681,
   333,   406,  1068,   194,   nil,   nil,   542,   nil,   nil,   nil,
     8,   403,  1141,   nil,   nil,   571,   nil,   nil,   nil,   264,
  1161,   125, 23262, 23323,   173,   502,   nil,   nil,   nil,  1169,
   nil,  1051,  1172,   nil,  1088,    75,    83,    94,    -8,   nil,
   nil,   nil,   nil,   555 ]

racc_action_default = [
    -3,  -549,    -1,  -537,    -4,    -6,  -549,  -549,  -549,  -549,
  -549,  -549,  -549,  -549,  -271,   -36,   -37,  -549,  -549,   -42,
   -44,   -45,  -282,  -320,  -321,   -49,  -249,  -249,  -249,   -61,
   -10,   -65,   -72,   -74,  -549,  -451,  -549,  -549,  -549,  -549,
  -549,  -539,  -226,  -264,  -265,  -266,  -267,  -268,  -269,  -270,
  -527,  -273,  -549,  -548,  -519,  -290,  -548,  -549,  -549,  -295,
  -298,  -537,  -549,  -549,  -312,  -549,  -322,  -323,  -391,  -392,
  -393,  -394,  -395,  -548,  -398,  -548,  -548,  -548,  -548,  -548,
  -425,  -431,  -432,  -433,  -549,  -525,  -441,  -442,  -526,  -444,
  -445,  -446,  -447,  -448,  -449,  -450,  -453,  -454,  -549,    -2,
  -538,  -544,  -545,  -546,  -549,  -549,  -549,  -549,  -549,    -3,
   -13,  -549,  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,
  -110,  -111,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,
  -120,  -121,  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,
  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,
  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,
  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,
  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,
  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,
  -180,  -181,  -182,  -549,   -18,  -107,   -10,  -549,  -549,  -549,
  -548,  -549,  -549,  -549,  -549,  -549,   -40,  -549,  -451,  -549,
  -271,  -549,  -549,   -10,  -549,   -41,  -218,  -549,  -549,  -549,
  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,
  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,
  -549,  -549,  -549,  -549,  -549,  -362,  -364,   -46,  -227,  -242,
  -256,  -256,  -246,  -549,  -257,  -549,  -282,  -320,  -321,  -521,
  -549,   -47,   -48,  -549,  -549,   -53,  -548,  -549,  -289,  -367,
  -374,  -376,   -59,  -372,   -60,  -549,  -537,   -11,   -61,   -10,
  -549,  -549,   -66,   -69,   -10,   -80,  -549,  -549,   -87,  -285,
  -539,  -549,  -324,  -373,  -549,   -71,  -549,   -76,  -278,  -434,
  -436,  -435,  -549,  -203,  -204,  -219,  -549,  -540,   -10,  -539,
  -228,  -539,  -541,  -541,  -549,  -549,  -541,  -549,  -291,  -292,
  -549,  -549,  -335,  -336,  -343,  -548,  -485,  -350,  -548,  -548,
  -361,  -484,  -486,  -487,  -488,  -489,  -490,  -549,  -503,  -508,
  -509,  -511,  -512,  -513,  -549,   -43,  -549,  -549,  -549,  -549,
  -537,  -549,  -538,  -451,  -549,  -549,  -271,  -549,  -492,  -493,
   -96,  -549,   -98,  -549,  -271,  -549,  -309,  -451,  -549,  -100,
  -101,  -138,  -139,  -155,  -160,  -167,  -170,  -315,  -549,  -517,
  -549,  -396,  -549,  -411,  -549,  -413,  -549,  -549,  -549,  -403,
  -549,  -549,  -409,  -549,  -424,  -426,  -427,  -428,  -429,  -437,
  -438,  -439,   944,    -5,  -547,   -19,   -20,   -21,   -22,   -23,
  -549,  -549,   -15,   -16,   -17,  -549,  -549,   -25,   -33,  -183,
  -257,  -549,  -549,   -26,   -34,   -35,   -27,  -185,  -549,  -528,
  -529,  -249,  -369,  -530,  -531,  -528,  -249,  -529,  -371,  -530,
  -531,   -32,  -192,   -38,   -39,  -549,  -549,  -548,  -278,  -549,
  -549,  -549,  -549,  -288,  -193,  -194,  -195,  -196,  -197,  -198,
  -199,  -200,  -205,  -206,  -207,  -208,  -209,  -210,  -211,  -212,
  -213,  -214,  -215,  -216,  -217,  -220,  -221,  -222,  -223,  -549,
  -548,  -243,  -549,  -244,  -549,  -254,  -549,  -258,  -524,  -249,
  -528,  -529,  -249,  -548,   -54,  -539,  -237,  -238,  -256,  -256,
  -250,  -251,  -549,  -548,  -548,  -549,  -284,    -9,  -538,  -549,
   -62,  -276,   -77,   -67,  -549,  -549,  -548,  -549,  -549,   -86,
  -549,  -434,  -436,   -73,   -78,  -549,  -549,  -549,  -549,  -549,
  -224,  -549,  -383,  -549,  -549,  -229,  -230,  -543,  -542,  -232,
  -543,  -280,  -281,  -520,  -332,   -10,   -10,  -549,  -334,  -549,
  -352,  -359,  -549,  -356,  -357,  -549,  -360,  -485,  -549,  -494,
  -549,  -496,  -498,  -502,  -510,  -514,   -10,  -325,  -326,  -327,
   -10,  -549,  -549,  -549,  -549,   -10,  -378,  -548,  -549,  -549,
  -278,  -304,   -96,   -97,  -549,  -548,  -549,  -307,  -455,  -549,
  -549,  -549,  -313,  -483,  -317,  -535,  -536,  -539,  -397,  -412,
  -415,  -416,  -418,  -399,  -414,  -400,  -401,  -402,  -549,  -405,
  -407,  -408,  -549,  -430,    -7,   -14,  -108,   -24,  -549,  -263,
  -549,  -279,  -549,  -549,   -55,  -235,  -236,  -368,  -549,   -57,
  -370,  -549,  -528,  -529,  -528,  -529,  -549,  -183,  -287,  -549,
  -346,  -549,  -348,   -10,  -256,  -255,  -259,  -549,  -522,  -523,
   -50,  -365,   -51,  -366,   -10,  -233,  -549,  -239,  -241,   -42,
  -549,  -248,  -252,  -549,   -10,   -10,  -283,   -12,   -62,  -549,
   -70,   -75,  -549,  -528,  -529,  -548,  -532,   -85,  -549,  -549,
  -191,  -201,  -202,  -549,  -548,  -548,  -274,  -275,  -541,  -549,
  -549,  -333,  -344,  -549,  -351,  -548,  -345,  -549,  -548,  -548,
  -504,  -491,  -549,  -549,  -501,  -548,  -328,  -548,  -296,  -329,
  -330,  -331,  -299,  -549,  -302,  -549,  -549,  -549,  -528,  -529,
  -532,  -277,  -549,   -96,   -99,  -532,  -549,   -10,  -549,  -457,
  -549,   -10,   -10,  -483,  -549,  -460,  -461,  -463,  -464,  -466,
  -467,  -516,  -516,  -472,  -474,  -474,  -474,  -482,  -485,  -506,
  -549,  -549,  -549,   -10,  -404,  -406,  -410,  -184,  -261,  -549,
  -549,   -29,  -187,   -30,  -188,   -56,   -31,  -189,   -58,  -190,
  -549,  -549,  -549,  -279,  -225,  -347,  -549,  -549,  -245,  -260,
  -549,  -234,  -256,  -549,  -253,  -549,  -549,   -68,   -81,   -79,
  -286,  -548,  -341,   -10,  -384,  -548,  -385,  -386,  -231,  -337,
  -338,  -358,  -549,  -278,  -549,  -354,  -355,  -495,  -497,  -500,
  -549,  -339,  -549,  -549,   -10,   -10,  -301,  -303,  -549,  -279,
  -549,  -279,  -549,  -456,  -310,  -549,  -549,  -539,  -459,  -462,
  -465,  -549,  -470,  -471,  -549,  -549,  -478,  -549,  -480,  -549,
  -481,  -549,  -318,  -518,  -417,  -420,  -421,  -422,  -423,  -549,
  -262,   -28,  -186,  -549,  -349,  -363,   -52,  -240,  -256,  -375,
  -377,    -8,   -10,  -390,  -342,  -549,  -549,  -388,  -277,  -548,
  -499,  -293,  -549,  -294,  -549,  -549,  -549,   -10,  -305,  -308,
   -10,  -314,  -316,  -549,  -468,  -516,  -515,  -473,  -474,  -474,
  -474,  -549,  -507,  -505,  -483,  -419,  -247,  -549,  -389,   -10,
   -88,  -549,  -549,   -95,  -387,  -353,   -10,  -297,  -300,  -259,
  -548,   -10,  -549,  -458,  -469,  -549,  -476,  -477,  -479,   -10,
  -383,  -548,  -549,  -549,   -94,  -548,  -379,  -380,  -381,  -549,
  -311,  -474,  -549,  -382,  -549,  -528,  -529,  -532,   -93,  -340,
  -306,  -475,  -319,   -89 ]

clist = [
'26,494,306,314,249,249,249,377,483,533,5,282,330,574,684,322,747,26',
'26,418,425,395,26,26,26,744,732,103,99,365,26,100,346,347,523,311,350',
'251,251,251,292,292,692,250,250,250,551,295,559,554,556,2,26,26,110',
'195,700,26,26,892,558,26,265,272,274,215,269,273,648,316,583,292,292',
'894,118,118,708,712,308,405,406,407,408,115,115,103,351,810,348,814',
'566,570,280,278,536,539,599,349,543,815,26,722,609,911,26,26,26,26,26',
'26,5,832,833,791,651,727,13,653,409,5,743,591,880,368,648,247,261,262',
'431,436,643,731,593,207,207,395,813,892,207,207,207,115,750,654,594',
'320,13,286,286,544,428,378,698,664,665,115,747,861,384,386,410,645,393',
'645,587,744,357,403,207,207,194,359,246,207,207,480,503,207,354,363',
'504,661,311,926,716,795,865,381,382,319,489,492,388,608,318,391,26,26',
'26,26,26,844,12,26,26,26,836,838,840,752,753,827,885,26,26,884,13,315',
'422,422,207,207,207,207,13,13,281,379,500,888,663,411,12,655,808,713',
'495,1,,,,,648,,417,423,426,,249,249,441,520,670,,,914,483,249,,,743',
',,,,,26,26,,115,534,559,535,,704,26,524,330,440,26,547,499,251,702,26',
',,498,250,,251,,292,724,,,250,692,513,,103,507,12,,508,292,,939,26,',
'12,12,13,207,207,207,207,747,,207,207,207,755,571,572,878,744,919,,13',
'207,269,,273,592,,645,645,700,927,,509,278,,,,515,278,26,26,916,917',
'918,,,,,,886,,765,886,743,,743,768,743,,,497,501,,431,436,103,573,,292',
'505,,26,,207,207,,,,,,588,,207,416,941,,13,,636,12,286,13,778,933,,',
',14,787,,281,,,286,,559,12,801,,,805,806,743,,,13,,,,822,311,,,825,826',
',,14,288,288,,,648,743,,675,,,26,,,,,,,,675,656,,615,,,,616,,207,207',
'672,624,356,364,798,626,629,,,281,630,,118,,281,12,118,,363,,12,115',
',,,115,,,524,,207,644,311,,,,26,,,675,14,796,26,,12,,,675,14,14,26,35',
'667,,870,,440,292,,650,,717,652,626,,26,626,,,726,645,,,778,,,,,10,26',
'26,35,285,285,,,688,,,,,,751,311,,292,877,207,728,,26,311,,,26,,928',
',10,26,645,26,,353,367,912,367,,,26,,,,26,905,26,,,440,709,709,330,',
',776,,14,,,440,358,,,899,,,,,729,896,906,35,207,14,932,,26,26,13,35',
'35,,26,,286,,207,,,,,,,,,,,26,10,,,207,,524,,,10,10,26,440,,,,789,440',
'13,13,,26,26,,,696,761,763,,782,,,766,,,292,,,,13,,,14,13,,292,288,14',
'13,842,207,,,,820,,695,,207,288,699,,207,422,207,,,12,,,35,14,626,,',
'630,,,,26,,,,,26,,,35,26,26,,,,,818,207,207,10,689,690,746,207,,,12',
'12,,,,823,26,824,,,10,828,13,26,,705,,,,707,,12,,13,715,12,,364,,,12',
',,13,13,,,,286,,872,883,,,,,26,,286,35,,,,285,35,,,858,,,851,,,,,26',
'285,26,26,,,,,,,,10,,35,115,,10,,,,,,,,,,207,777,,,,13,709,12,,13,13',
'675,780,,10,,,,12,,,,785,786,26,,,,12,12,,13,,934,,,,292,207,26,440',
',26,,,746,,367,,,,,,,,,,,,,,26,,,,311,,,26,,,13,,26,,,14,,,,,26,288',
'26,,,,,,,207,12,13,13,,12,12,,,,,,,,,,323,,,,,849,,14,14,,869,12,,,364',
',,383,,385,385,389,392,385,,,,,14,,,,14,,13,,,14,901,,,889,,890,,864',
',,,13,,12,13,,,440,,,,,,,,,,,874,875,,,,13,12,12,,,,,13,,,35,,13,,,',
'285,,,,13,,207,,,,,,,746,,,,,14,,,10,,,,,,898,,14,,35,35,12,931,,,,367',
'14,14,,910,,288,206,,,12,,,12,35,,288,,35,,10,10,,35,,,920,,,,,,12,925',
',,,,929,12,,10,309,,12,10,,345,345,,10,345,12,,,,,,,,,,,,14,,,,14,14',
',,,,,,,,,,,,,,,496,,,,848,14,35,,,345,345,345,345,,,,317,35,,,,,,,,',
',35,35,,,,285,10,,,,,,,,,285,,10,14,,,,,,,,,10,10,,,,550,,,550,550,',
',14,14,,,,,,,,,,,,,,,,,,,,,,,35,,,,35,35,,,,,,,,,,,,,,443,444,,,,14',
',35,10,903,452,,10,10,,,,,,,14,,,14,216,,,,248,248,248,,,,10,,,,,,,',
'14,,303,304,305,35,,14,420,424,,,14,,625,,,248,248,,14,,,,,,35,35,,',
',,10,,,,,,,,,,,,,,,,,,,,,10,10,,,,,,,,,640,485,,487,,,,,488,625,,35',
'625,640,,900,,,,,,,,640,640,,35,,,35,,,,,,,,,10,345,345,,904,,,,,,35',
',,,,10,,35,10,,,,35,,,,,,,,35,,,597,,,,10,,,,,,,10,,,,,10,,,,,,,,10',
',,419,248,427,248,,,442,,,,,,,,,,,,,,216,,454,455,456,457,458,459,460',
'461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477',
'478,479,,,,,,,,,248,,248,,,,,248,,,,,,248,248,619,,,,,,,248,,,,,,,,',
',,,,,,,,309,,625,,,,,,,,,792,797,,530,,,,,,,,550,,,550,550,,,683,,,792',
',792,,,646,,317,,649,,,,,,,,,,,,,,,,660,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',345,,730,,,646,,,317,,,,,,,,,,,,,,,,,,,,,,,863,,,,867,,,,,,,248,,,',
',,,,,,,,,,,,,,,,,,,,,,248,,442,637,427,,,,,,,,,,,,,,,,758,,,,,,,,,,',
',,,,248,,248,,248,,550,,,,,,779,,,,,,,,659,,646,317,,,,,,,345,,,,248',
',,,,,,,,680,681,682,,792,,,794,,,,,248,,,248,,,,792,,,,,,,,,,,,,,,,',
',,420,,,,,,,,,,,,,,248,,,,,,,,248,830,,,,,,,,,,,,,,,,345,,,,850,,,,',
',,,,,,,757,,248,,762,764,,,,,767,,420,769,,,,,,,,774,,,,,,,,248,,,,',
',,,,,248,248,,,,,,,,,,,,,,,,,,,,,,,,,,,248,,,893,,,,,,,,,,,,,,,,317',
',,,,,,,,,,,248,,,,,,,909,,,,,,,,,,,,,,,,248,,,,,909,,,,,,,,,,,,,,,248',
'852,,,,,,,,,,762,764,767,,,,,,,,,,,248,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,248,,,,,,,,,,,,852,,,,248,,,,,,,,,,,,,,',
',,,,248,,,,,,,,,,,,,,,,,,,,,248,,,,,,,,,,,,,,,,,,,,,,,,248' ]
        racc_goto_table = arr = ::Array.new(2191, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'37,35,51,22,29,29,29,47,61,8,7,41,107,80,10,104,141,37,37,24,24,47,37',
'37,37,110,84,83,4,46,37,6,16,16,43,29,16,56,56,56,52,52,106,54,54,54',
'109,42,145,109,109,2,37,37,14,14,147,37,37,151,148,37,34,34,34,18,57',
'57,154,56,45,52,52,101,50,50,79,79,87,16,16,16,16,48,48,83,4,78,88,89',
'77,77,39,38,55,55,129,90,55,91,37,92,129,93,37,37,37,37,37,37,7,142',
'142,11,60,94,21,60,7,7,108,95,96,97,154,31,31,31,33,33,36,98,99,21,21',
'47,11,151,21,21,21,48,100,36,86,102,21,21,21,103,22,85,105,36,36,48',
'141,12,126,126,2,62,126,62,82,110,81,5,21,21,15,19,112,21,21,113,115',
'21,21,21,116,62,29,117,118,119,120,124,125,76,33,33,127,128,74,130,37',
'37,37,37,37,131,20,37,37,37,143,143,143,132,133,135,137,37,37,139,21',
'73,54,54,21,21,21,21,21,21,9,72,64,144,63,27,20,59,149,80,58,1,,,,,154',
',18,18,18,,29,29,18,51,43,,,142,61,29,,,108,,,,,,37,37,,48,51,145,51',
',145,37,41,107,48,37,104,56,56,148,37,,,54,54,,56,,52,45,,,54,106,42',
',83,4,20,,6,52,,78,37,,20,20,21,21,21,21,21,141,,21,21,21,129,16,16',
'79,110,84,,21,21,57,,57,46,,62,62,147,11,,39,38,,,,39,38,37,37,143,143',
'143,,,,,,108,,35,108,108,,108,35,108,,,31,31,,33,33,83,4,,52,31,,37',
',21,21,,,,,,83,,21,9,143,,21,,22,20,21,21,61,10,,,,23,43,,9,,,21,,145',
'20,109,,,109,109,108,,,21,,,,8,29,,,8,8,,,23,23,23,,,154,108,,33,,,37',
',,,,,,,33,51,,14,,,,14,,21,21,22,34,23,23,55,57,34,,,9,57,,50,,9,20',
'50,,21,,20,48,,,,48,,,41,,21,56,29,,,,37,,,33,23,24,37,,20,,,33,23,23',
'37,44,7,,145,,48,52,,34,,22,34,57,,37,57,,,22,62,,,61,,,,,17,37,37,44',
'44,44,,,56,,,,,,51,29,,52,77,21,16,,37,29,,,37,,80,,17,37,62,37,,44',
'44,8,44,,,37,,,,37,109,37,,,48,83,83,107,,,104,,23,,,48,17,,,77,,,,',
'83,61,77,44,21,23,8,,37,37,21,44,44,,37,,21,,21,,,,,,,,,,,37,17,,,21',
',41,,,17,17,37,48,,,,41,48,21,21,,37,37,,,21,18,18,,56,,,18,,,52,,,',
'21,,,23,21,,52,23,23,21,47,21,,,,16,,111,,21,23,111,,21,54,21,,,20,',
',44,23,57,,,57,,,,37,,,,,37,,,44,37,37,,,,,54,21,21,17,9,9,111,21,,',
'20,20,,,,83,37,83,,,17,83,21,37,,9,,,,9,,20,,21,9,20,,23,,,20,,,21,21',
',,,21,,16,51,,,,,37,,21,44,,,,44,44,,,54,,,18,,,,,37,44,37,37,,,,,,',
',17,,44,48,,17,,,,,,,,,,21,9,,,,21,83,20,,21,21,33,9,,17,,,,20,,,,9',
'9,37,,,,20,20,,21,,22,,,,52,21,37,48,,37,,,111,,44,,,,,,,,,,,,,,37,',
',,29,,,37,,,21,,37,,,23,,,,,37,23,37,,,,,,,21,20,21,21,,20,20,,,,,,',
',,,53,,,,,9,,23,23,,111,20,,,23,,,53,,53,53,53,53,53,,,,,23,,,,23,,21',
',,23,21,,,111,,111,,9,,,,21,,20,21,,,48,,,,,,,,,,,9,9,,,,21,20,20,,',
',,21,,,44,,21,,,,44,,,,21,,21,,,,,,,111,,,,,23,,,17,,,,,,9,,23,,44,44',
'20,111,,,,44,23,23,,9,,23,26,,,20,,,20,44,,23,,44,,17,17,,44,,,9,,,',
',,20,9,,,,,9,20,,17,26,,20,17,,26,26,,17,26,20,,,,,,,,,,,,23,,,,23,23',
',,,,,,,,,,,,,,,53,,,,23,23,44,,,26,26,26,26,,,,25,44,,,,,,,,,,44,44',
',,,44,17,,,,,,,,,44,,17,23,,,,,,,,,17,17,,,,53,,,53,53,,,23,23,,,,,',
',,,,,,,,,,,,,,,,,44,,,,44,44,,,,,,,,,,,,,,26,26,,,,23,,44,17,23,26,',
'17,17,,,,,,,23,,,23,28,,,,28,28,28,,,,17,,,,,,,,23,,28,28,28,44,,23',
'25,25,,,23,,53,,,28,28,,23,,,,,,44,44,,,,,17,,,,,,,,,,,,,,,,,,,,,17',
'17,,,,,,,,,53,25,,25,,,,,25,53,,44,53,53,,44,,,,,,,,53,53,,44,,,44,',
',,,,,,,17,26,26,,17,,,,,,44,,,,,17,,44,17,,,,44,,,,,,,,44,,,26,,,,17',
',,,,,,17,,,,,17,,,,,,,,17,,,28,28,28,28,,,28,,,,,,,,,,,,,,28,,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,,,,,,,,,28,,28,,,,,28,,,,,,28,28,25,,,,,,,28,,,,,,,,,,,,,,,,,26,',
'53,,,,,,,,,53,53,,28,,,,,,,,53,,,53,53,,,26,,,53,,53,,,25,,25,,25,,',
',,,,,,,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,26,,,25,,,25,,,,,,',
',,,,,,,,,,,,,,,,53,,,,53,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,28',
'28,,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,28,,28,,28,,53,,,,,,25,,,,,,,,28',
',25,25,,,,,,,26,,,,28,,,,,,,,,28,28,28,,53,,,25,,,,,28,,,28,,,,53,,',
',,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,28,,,,,,,,28,25,,,,,,,,,,,,,,,,26,,',
',25,,,,,,,,,,,,28,,28,,28,28,,,,,28,,25,28,,,,,,,,28,,,,,,,,28,,,,,',
',,,,28,28,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,25,,,,,,,,,,,,,,,,25,,,,,,',
',,,,,28,,,,,,,25,,,,,,,,,,,,,,,,28,,,,,25,,,,,,,,,,,,,,,28,28,,,,,,',
',,,28,28,28,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,28,,,,,,,,,,,,28,,,,28,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,',
',,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,28' ]
        racc_goto_check = arr = ::Array.new(2191, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   237,    51,   nil,    25,    67,    28,    10,  -299,   196,
  -518,  -571,  -634,   nil,    47,   162,   -25,   544,    47,   109,
   202,   116,   -50,   406,  -178,  1116,  1059,   121,  1269,   -18,
   nil,   103,   nil,   -73,    36,  -264,  -350,     0,    63,    62,
   nil,   -20,    15,  -262,   517,  -291,   -34,   -58,    76,   nil,
    67,   -39,     9,   888,    21,  -218,    15,    40,   -30,  -262,
  -375,  -243,  -321,  -272,   -39,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   162,   163,   139,   nil,   133,  -256,  -618,  -495,
  -338,   104,  -201,    24,  -567,    86,  -234,    27,    29,  -619,
    37,  -613,  -480,  -775,  -472,  -245,  -702,    59,  -461,  -245,
  -452,  -769,    89,  -171,   -41,  -401,  -507,   -44,  -473,  -279,
  -568,   150,   152,   -70,   nil,   -94,   -91,  -727,  -392,  -500,
  -609,   nil,   nil,   nil,   116,   115,    83,   115,  -195,  -286,
   117,  -551,  -392,  -392,   nil,  -522,   nil,  -619,   nil,  -616,
   nil,  -577,  -630,  -538,  -606,  -289,   nil,  -497,  -277,  -469,
   nil,  -778,   nil,   nil,  -416 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   352,   277,   nil,   532,
   nil,   811,   nil,   276,   nil,   nil,   nil,   211,    16,    11,
   212,   302,   nil,   210,   nil,   254,    15,   nil,    19,    20,
    21,   nil,    25,   678,   nil,   nil,   nil,   291,    29,   nil,
    31,    34,    33,   nil,   208,   362,   nil,   117,   434,   116,
    69,   nil,    42,   310,   312,   nil,   313,   432,   nil,   nil,
   627,   481,   252,   nil,   nil,   267,    43,    44,    45,    46,
    47,    48,    49,   nil,   268,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   567,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   325,   324,   694,   327,   nil,
   328,   329,   nil,   nil,   438,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   604,
   nil,   nil,   nil,   nil,   394,   734,   737,   742,   739,   740,
   741,   887,   nil,   nil,   745,   336,   331,   338,   nil,   561,
   562,   749,   341,   344,   259 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 142, :_reduce_none,
  2, 143, :_reduce_2,
  0, 144, :_reduce_3,
  1, 144, :_reduce_4,
  3, 144, :_reduce_5,
  1, 146, :_reduce_none,
  4, 146, :_reduce_7,
  4, 149, :_reduce_8,
  2, 150, :_reduce_9,
  0, 154, :_reduce_10,
  1, 154, :_reduce_11,
  3, 154, :_reduce_12,
  0, 168, :_reduce_13,
  4, 148, :_reduce_14,
  3, 148, :_reduce_15,
  3, 148, :_reduce_none,
  3, 148, :_reduce_17,
  2, 148, :_reduce_18,
  3, 148, :_reduce_19,
  3, 148, :_reduce_20,
  3, 148, :_reduce_21,
  3, 148, :_reduce_22,
  3, 148, :_reduce_23,
  4, 148, :_reduce_none,
  3, 148, :_reduce_25,
  3, 148, :_reduce_26,
  3, 148, :_reduce_27,
  6, 148, :_reduce_none,
  5, 148, :_reduce_29,
  5, 148, :_reduce_none,
  5, 148, :_reduce_none,
  3, 148, :_reduce_none,
  3, 148, :_reduce_33,
  3, 148, :_reduce_34,
  3, 148, :_reduce_35,
  1, 148, :_reduce_none,
  1, 167, :_reduce_none,
  3, 167, :_reduce_38,
  3, 167, :_reduce_39,
  2, 167, :_reduce_40,
  2, 167, :_reduce_41,
  1, 167, :_reduce_none,
  1, 157, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  2, 159, :_reduce_46,
  2, 159, :_reduce_47,
  2, 159, :_reduce_48,
  1, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 176, :_reduce_none,
  2, 170, :_reduce_53,
  3, 170, :_reduce_none,
  4, 170, :_reduce_55,
  5, 170, :_reduce_none,
  4, 170, :_reduce_57,
  5, 170, :_reduce_none,
  2, 170, :_reduce_59,
  2, 170, :_reduce_60,
  1, 160, :_reduce_61,
  3, 160, :_reduce_62,
  1, 180, :_reduce_63,
  3, 180, :_reduce_64,
  1, 179, :_reduce_65,
  2, 179, :_reduce_66,
  3, 179, :_reduce_67,
  5, 179, :_reduce_none,
  2, 179, :_reduce_69,
  4, 179, :_reduce_none,
  2, 179, :_reduce_71,
  1, 179, :_reduce_72,
  3, 179, :_reduce_none,
  1, 182, :_reduce_74,
  3, 182, :_reduce_75,
  2, 181, :_reduce_76,
  3, 181, :_reduce_77,
  1, 184, :_reduce_none,
  3, 184, :_reduce_none,
  1, 183, :_reduce_80,
  4, 183, :_reduce_81,
  3, 183, :_reduce_82,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  2, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 158, :_reduce_88,
  4, 158, :_reduce_89,
  3, 158, :_reduce_90,
  3, 158, :_reduce_91,
  3, 158, :_reduce_92,
  3, 158, :_reduce_93,
  2, 158, :_reduce_94,
  1, 158, :_reduce_none,
  1, 186, :_reduce_none,
  2, 187, :_reduce_97,
  1, 187, :_reduce_98,
  3, 187, :_reduce_99,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_103,
  1, 188, :_reduce_104,
  1, 155, :_reduce_105,
  1, 155, :_reduce_none,
  1, 156, :_reduce_107,
  3, 156, :_reduce_108,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  3, 169, :_reduce_183,
  5, 169, :_reduce_184,
  3, 169, :_reduce_185,
  6, 169, :_reduce_186,
  5, 169, :_reduce_187,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  4, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_193,
  3, 169, :_reduce_194,
  3, 169, :_reduce_195,
  3, 169, :_reduce_196,
  3, 169, :_reduce_197,
  3, 169, :_reduce_198,
  3, 169, :_reduce_199,
  3, 169, :_reduce_200,
  4, 169, :_reduce_201,
  4, 169, :_reduce_202,
  2, 169, :_reduce_203,
  2, 169, :_reduce_204,
  3, 169, :_reduce_205,
  3, 169, :_reduce_206,
  3, 169, :_reduce_207,
  3, 169, :_reduce_208,
  3, 169, :_reduce_209,
  3, 169, :_reduce_210,
  3, 169, :_reduce_211,
  3, 169, :_reduce_212,
  3, 169, :_reduce_213,
  3, 169, :_reduce_214,
  3, 169, :_reduce_215,
  3, 169, :_reduce_216,
  3, 169, :_reduce_217,
  2, 169, :_reduce_218,
  2, 169, :_reduce_219,
  3, 169, :_reduce_220,
  3, 169, :_reduce_221,
  3, 169, :_reduce_222,
  3, 169, :_reduce_223,
  3, 169, :_reduce_224,
  5, 169, :_reduce_225,
  1, 169, :_reduce_none,
  1, 166, :_reduce_none,
  1, 163, :_reduce_228,
  2, 163, :_reduce_229,
  2, 163, :_reduce_230,
  4, 163, :_reduce_231,
  2, 163, :_reduce_232,
  3, 198, :_reduce_233,
  2, 200, :_reduce_none,
  1, 201, :_reduce_235,
  1, 201, :_reduce_none,
  1, 199, :_reduce_237,
  1, 199, :_reduce_none,
  2, 199, :_reduce_239,
  4, 199, :_reduce_240,
  2, 199, :_reduce_241,
  1, 172, :_reduce_242,
  2, 172, :_reduce_243,
  2, 172, :_reduce_244,
  4, 172, :_reduce_245,
  1, 172, :_reduce_246,
  4, 204, :_reduce_none,
  1, 204, :_reduce_none,
  0, 206, :_reduce_249,
  2, 175, :_reduce_250,
  1, 205, :_reduce_none,
  2, 205, :_reduce_252,
  3, 205, :_reduce_253,
  2, 203, :_reduce_254,
  2, 202, :_reduce_255,
  0, 202, :_reduce_256,
  1, 195, :_reduce_257,
  2, 195, :_reduce_258,
  3, 195, :_reduce_259,
  4, 195, :_reduce_260,
  3, 165, :_reduce_261,
  4, 165, :_reduce_262,
  2, 165, :_reduce_263,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  0, 228, :_reduce_273,
  4, 193, :_reduce_274,
  4, 193, :_reduce_275,
  3, 193, :_reduce_276,
  3, 193, :_reduce_277,
  2, 193, :_reduce_278,
  4, 193, :_reduce_279,
  3, 193, :_reduce_280,
  3, 193, :_reduce_281,
  1, 193, :_reduce_282,
  4, 193, :_reduce_283,
  3, 193, :_reduce_284,
  1, 193, :_reduce_285,
  5, 193, :_reduce_286,
  4, 193, :_reduce_287,
  3, 193, :_reduce_288,
  2, 193, :_reduce_289,
  1, 193, :_reduce_none,
  2, 193, :_reduce_291,
  2, 193, :_reduce_292,
  6, 193, :_reduce_293,
  6, 193, :_reduce_294,
  0, 229, :_reduce_295,
  0, 230, :_reduce_296,
  7, 193, :_reduce_297,
  0, 231, :_reduce_298,
  0, 232, :_reduce_299,
  7, 193, :_reduce_300,
  5, 193, :_reduce_301,
  4, 193, :_reduce_302,
  5, 193, :_reduce_303,
  0, 233, :_reduce_304,
  0, 234, :_reduce_305,
  9, 193, :_reduce_306,
  0, 235, :_reduce_307,
  6, 193, :_reduce_308,
  0, 236, :_reduce_309,
  0, 237, :_reduce_310,
  8, 193, :_reduce_311,
  0, 238, :_reduce_312,
  0, 239, :_reduce_313,
  6, 193, :_reduce_314,
  0, 240, :_reduce_315,
  6, 193, :_reduce_316,
  0, 241, :_reduce_317,
  0, 242, :_reduce_318,
  9, 193, :_reduce_319,
  1, 193, :_reduce_320,
  1, 193, :_reduce_321,
  1, 193, :_reduce_322,
  1, 193, :_reduce_none,
  1, 162, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  2, 218, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  2, 217, :_reduce_332,
  3, 243, :_reduce_333,
  2, 243, :_reduce_334,
  1, 243, :_reduce_none,
  1, 243, :_reduce_none,
  3, 244, :_reduce_337,
  3, 244, :_reduce_338,
  1, 219, :_reduce_339,
  5, 219, :_reduce_340,
  1, 152, :_reduce_none,
  2, 152, :_reduce_342,
  1, 246, :_reduce_343,
  3, 246, :_reduce_344,
  3, 247, :_reduce_345,
  1, 177, :_reduce_none,
  2, 177, :_reduce_347,
  1, 177, :_reduce_348,
  3, 177, :_reduce_349,
  1, 248, :_reduce_350,
  2, 250, :_reduce_351,
  1, 250, :_reduce_352,
  6, 245, :_reduce_353,
  4, 245, :_reduce_354,
  4, 245, :_reduce_355,
  2, 245, :_reduce_356,
  2, 245, :_reduce_357,
  4, 245, :_reduce_358,
  2, 245, :_reduce_359,
  2, 245, :_reduce_360,
  1, 245, :_reduce_361,
  0, 254, :_reduce_362,
  5, 253, :_reduce_363,
  2, 173, :_reduce_364,
  4, 173, :_reduce_none,
  4, 173, :_reduce_none,
  2, 216, :_reduce_367,
  4, 216, :_reduce_368,
  3, 216, :_reduce_369,
  4, 216, :_reduce_370,
  3, 216, :_reduce_371,
  2, 216, :_reduce_372,
  1, 216, :_reduce_373,
  0, 256, :_reduce_374,
  5, 215, :_reduce_375,
  0, 257, :_reduce_376,
  5, 215, :_reduce_377,
  0, 259, :_reduce_378,
  6, 221, :_reduce_379,
  1, 258, :_reduce_380,
  1, 258, :_reduce_none,
  6, 151, :_reduce_382,
  0, 151, :_reduce_383,
  1, 260, :_reduce_384,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  2, 261, :_reduce_387,
  1, 261, :_reduce_388,
  2, 153, :_reduce_389,
  1, 153, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 208, :_reduce_394,
  1, 264, :_reduce_none,
  2, 264, :_reduce_396,
  3, 265, :_reduce_397,
  1, 265, :_reduce_398,
  3, 209, :_reduce_399,
  3, 210, :_reduce_400,
  3, 211, :_reduce_401,
  3, 211, :_reduce_402,
  1, 268, :_reduce_403,
  3, 268, :_reduce_404,
  1, 269, :_reduce_405,
  2, 269, :_reduce_406,
  3, 212, :_reduce_407,
  3, 212, :_reduce_408,
  1, 271, :_reduce_409,
  3, 271, :_reduce_410,
  1, 266, :_reduce_411,
  2, 266, :_reduce_412,
  1, 267, :_reduce_413,
  2, 267, :_reduce_414,
  1, 270, :_reduce_415,
  0, 273, :_reduce_416,
  3, 270, :_reduce_417,
  0, 274, :_reduce_418,
  4, 270, :_reduce_419,
  1, 272, :_reduce_420,
  1, 272, :_reduce_421,
  1, 272, :_reduce_422,
  1, 272, :_reduce_none,
  2, 191, :_reduce_424,
  1, 191, :_reduce_425,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  3, 263, :_reduce_430,
  1, 262, :_reduce_431,
  1, 262, :_reduce_432,
  1, 262, :_reduce_433,
  2, 262, :_reduce_434,
  2, 262, :_reduce_435,
  2, 262, :_reduce_436,
  2, 262, :_reduce_437,
  2, 262, :_reduce_438,
  2, 262, :_reduce_439,
  1, 185, :_reduce_440,
  1, 185, :_reduce_441,
  1, 185, :_reduce_442,
  1, 185, :_reduce_443,
  1, 185, :_reduce_444,
  1, 185, :_reduce_445,
  1, 185, :_reduce_446,
  1, 185, :_reduce_447,
  1, 185, :_reduce_448,
  1, 185, :_reduce_449,
  1, 185, :_reduce_450,
  1, 213, :_reduce_451,
  1, 161, :_reduce_452,
  1, 164, :_reduce_453,
  1, 164, :_reduce_none,
  1, 223, :_reduce_455,
  3, 223, :_reduce_456,
  2, 223, :_reduce_457,
  4, 225, :_reduce_458,
  2, 225, :_reduce_459,
  1, 277, :_reduce_none,
  1, 277, :_reduce_none,
  2, 278, :_reduce_462,
  1, 278, :_reduce_463,
  1, 279, :_reduce_464,
  2, 280, :_reduce_465,
  1, 280, :_reduce_466,
  1, 281, :_reduce_467,
  3, 281, :_reduce_468,
  4, 282, :_reduce_469,
  2, 282, :_reduce_470,
  2, 282, :_reduce_471,
  1, 282, :_reduce_472,
  2, 284, :_reduce_473,
  0, 284, :_reduce_474,
  6, 276, :_reduce_475,
  4, 276, :_reduce_476,
  4, 276, :_reduce_477,
  2, 276, :_reduce_478,
  4, 276, :_reduce_479,
  2, 276, :_reduce_480,
  2, 276, :_reduce_481,
  1, 276, :_reduce_482,
  0, 276, :_reduce_483,
  1, 286, :_reduce_none,
  1, 286, :_reduce_485,
  1, 287, :_reduce_486,
  1, 287, :_reduce_487,
  1, 287, :_reduce_488,
  1, 287, :_reduce_489,
  1, 288, :_reduce_490,
  3, 288, :_reduce_491,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 290, :_reduce_494,
  3, 290, :_reduce_none,
  1, 291, :_reduce_496,
  3, 291, :_reduce_497,
  1, 289, :_reduce_none,
  4, 289, :_reduce_none,
  3, 289, :_reduce_none,
  2, 289, :_reduce_none,
  1, 289, :_reduce_none,
  1, 251, :_reduce_503,
  3, 251, :_reduce_504,
  3, 292, :_reduce_505,
  1, 285, :_reduce_506,
  3, 285, :_reduce_507,
  1, 293, :_reduce_none,
  1, 293, :_reduce_none,
  2, 252, :_reduce_510,
  1, 252, :_reduce_511,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 249, :_reduce_514,
  2, 283, :_reduce_515,
  0, 283, :_reduce_516,
  1, 226, :_reduce_517,
  4, 226, :_reduce_518,
  0, 214, :_reduce_519,
  2, 214, :_reduce_520,
  1, 197, :_reduce_521,
  3, 197, :_reduce_522,
  3, 295, :_reduce_523,
  2, 295, :_reduce_524,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 227, :_reduce_none,
  1, 227, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 224, :_reduce_none,
  1, 224, :_reduce_none,
  1, 147, :_reduce_none,
  2, 147, :_reduce_none,
  0, 194, :_reduce_548 ]

racc_reduce_n = 549

racc_shift_n = 944

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tBIGNUM => 62,
  :tFLOAT => 63,
  :tREGEXP_END => 64,
  :tUPLUS => 65,
  :tUMINUS => 66,
  :tUMINUS_NUM => 67,
  :tPOW => 68,
  :tCMP => 69,
  :tEQ => 70,
  :tEQQ => 71,
  :tNEQ => 72,
  :tGEQ => 73,
  :tLEQ => 74,
  :tANDOP => 75,
  :tOROP => 76,
  :tMATCH => 77,
  :tNMATCH => 78,
  :tDOT => 79,
  :tDOT2 => 80,
  :tDOT3 => 81,
  :tAREF => 82,
  :tASET => 83,
  :tLSHFT => 84,
  :tRSHFT => 85,
  :tCOLON2 => 86,
  :tCOLON3 => 87,
  :tOP_ASGN => 88,
  :tASSOC => 89,
  :tLPAREN => 90,
  :tLPAREN2 => 91,
  :tRPAREN => 92,
  :tLPAREN_ARG => 93,
  :ARRAY_BEG => 94,
  :tRBRACK => 95,
  :tLBRACE => 96,
  :tLBRACE_ARG => 97,
  :tSTAR => 98,
  :tSTAR2 => 99,
  :tAMPER => 100,
  :tAMPER2 => 101,
  :tTILDE => 102,
  :tPERCENT => 103,
  :tDIVIDE => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tAWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tLBRACK2 => 134,
  :tLBRACK => 135,
  :tDSTAR => 136,
  :tEQL => 137,
  :tLOWEST => 138,
  "-@NUM" => 139,
  "+@NUM" => 140 }

racc_nt_base = 141

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tBIGNUM",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tDSTAR",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 234 omitted

def _reduce_235(val, _values, result)
                      result = []
                    
    result
end

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_243(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_244(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_245(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_246(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 247 omitted

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_250(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 251 omitted

def _reduce_252(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_253(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_257(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_258(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_259(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_260(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_261(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_262(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_263(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

def _reduce_273(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_281(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_282(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_285(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_286(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 290 omitted

def _reduce_291(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_292(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_298(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_299(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_301(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_302(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_303(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_304(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_305(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_306(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_312(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_313(val, _values, result)
                      # ...
                    
    result
end

def _reduce_314(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_315(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_318(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_319(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_320(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_321(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_322(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

def _reduce_332(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_333(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_334(val, _values, result)
                      result = nil
                    
    result
end

# reduce 335 omitted

# reduce 336 omitted

def _reduce_337(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_338(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_339(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 341 omitted

def _reduce_342(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_343(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_344(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_345(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 346 omitted

def _reduce_347(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_348(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_351(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_352(val, _values, result)
                      nil
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_362(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_363(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_364(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 365 omitted

# reduce 366 omitted

def _reduce_367(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_374(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_375(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_376(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_377(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_378(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_379(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_380(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 381 omitted

def _reduce_382(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_383(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_384(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 385 omitted

# reduce 386 omitted

def _reduce_387(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_388(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_389(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

def _reduce_394(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 395 omitted

def _reduce_396(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_397(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_399(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_400(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_401(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_402(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_403(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_404(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_405(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_406(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_407(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_408(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_409(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_410(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_411(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_412(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_413(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_414(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_415(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_416(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_417(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_418(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_419(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_420(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_421(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_422(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 423 omitted

def _reduce_424(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_425(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

def _reduce_430(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_431(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_432(val, _values, result)
                      result = new_bignum(val[0])
                    
    result
end

def _reduce_433(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_434(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_435(val, _values, result)
                      result = new_bignum(val[0])
                  
    result
end

def _reduce_436(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_437(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_438(val, _values, result)
                      result = new_bignum(val[0])
                  
    result
end

def _reduce_439(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_440(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_447(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_448(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_451(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_453(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 454 omitted

def _reduce_455(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_456(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_457(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_458(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_459(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 460 omitted

# reduce 461 omitted

def _reduce_462(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_463(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_464(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_465(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_466(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_467(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_471(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_474(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 484 omitted

def _reduce_485(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_486(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_487(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_488(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_489(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_490(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_491(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 492 omitted

# reduce 493 omitted

def _reduce_494(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 495 omitted

def _reduce_496(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_497(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 498 omitted

# reduce 499 omitted

# reduce 500 omitted

# reduce 501 omitted

# reduce 502 omitted

def _reduce_503(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_504(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_505(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_506(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_507(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 508 omitted

# reduce 509 omitted

def _reduce_510(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_511(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 512 omitted

# reduce 513 omitted

def _reduce_514(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_515(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_516(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_517(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_518(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_519(val, _values, result)
                      result = []
                    
    result
end

def _reduce_520(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_521(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_522(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_523(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_524(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

def _reduce_548(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
